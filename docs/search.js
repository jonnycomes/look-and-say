window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "look_and_say", "modulename": "look_and_say", "type": "module", "doc": "<p>A python module for exploring look and say sequences in the spirit of John H Conway.</p>\n\n<p>The following assumes familiarity with the terminology and notation for look and sequences introduced by Conway in his delightful article <a href=\"https://link.springer.com/chapter/10.1007/978-1-4612-4808-8_53\">The Weird and Wonderful Chemistry of Audioactive Decay</a>. </p>\n\n<p>This module can be used to recover several of Conway's results on standard look and say sequences. Additionally, it can be used to discover new results on various nonstandard look and say sequences. For an introduction to nonstandard look and say sequences, see the <a href=\"https://jonnycomes.github.io/look_and_say/papers/intro_nonstandard_look_and_say/look_and_say_intro.pdf\">notes here</a>.</p>\n\n<h1 id=\"straight-to-example-sessions\">Straight to example sessions</h1>\n\n<p>You can read more details about all the objects and methods in the <code>look_and_say</code> module <a href=\"https://jonnycomes.github.io/look_and_say/docs/look_and_say.html#detailed-documentation\">here</a>. The following are some example sessions for the reader who wants to skip the details.</p>\n\n<h2 id=\"standard-decimal\">Standard decimal</h2>\n\n<p>The following session illustrates how the <code>look_and_say</code> module can be used to recover some of Conway's results.  </p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">look_and_say</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># The default LookAndSay object uses the standard decimal number system:</span>\n<span class=\"o\">...</span> <span class=\"n\">decimal</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Perform the fundamental look and say operation:</span>\n<span class=\"o\">...</span> <span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">say_what_you_see</span><span class=\"p\">(</span><span class=\"s1\">&#39;1222111&#39;</span><span class=\"p\">)</span>\n<span class=\"s1\">&#39;113231&#39;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Generate a look and say sequence</span>\n<span class=\"o\">...</span> <span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">generate_sequence</span><span class=\"p\">(</span><span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"n\">terms</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">get_sequence</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;11&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;21&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;111221&#39;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Use Conway&#39;s splitting theorem to search for all the elements </span>\n<span class=\"o\">...</span> <span class=\"c1\"># in the look and say sequence generated from the seed &#39;1&#39;. </span>\n<span class=\"o\">...</span> <span class=\"c1\"># This will generate Conway&#39;s 92 common elements: </span>\n<span class=\"o\">...</span> <span class=\"n\">chem</span> <span class=\"o\">=</span> <span class=\"n\">Chemistry</span><span class=\"p\">(</span><span class=\"n\">decimal</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">generate_elements</span><span class=\"p\">(</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">get_elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">He</span><span class=\"p\">,</span> <span class=\"n\">Li</span><span class=\"p\">,</span> <span class=\"n\">Be</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"n\">O</span><span class=\"p\">,</span> <span class=\"n\">F</span><span class=\"p\">,</span> <span class=\"n\">Ne</span><span class=\"p\">,</span> <span class=\"n\">Na</span><span class=\"p\">,</span> <span class=\"n\">Mg</span><span class=\"p\">,</span> <span class=\"n\">Al</span><span class=\"p\">,</span> <span class=\"n\">Si</span><span class=\"p\">,</span> <span class=\"n\">P</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">Cl</span><span class=\"p\">,</span> <span class=\"n\">Ar</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Sc</span><span class=\"p\">,</span> <span class=\"n\">Ti</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"n\">Cr</span><span class=\"p\">,</span> <span class=\"n\">Mn</span><span class=\"p\">,</span> <span class=\"n\">Fe</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">,</span> <span class=\"n\">Ni</span><span class=\"p\">,</span> <span class=\"n\">Cu</span><span class=\"p\">,</span> <span class=\"n\">Zn</span><span class=\"p\">,</span> <span class=\"n\">Ga</span><span class=\"p\">,</span> <span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">As</span><span class=\"p\">,</span> <span class=\"n\">Se</span><span class=\"p\">,</span> <span class=\"n\">Br</span><span class=\"p\">,</span> <span class=\"n\">Kr</span><span class=\"p\">,</span> <span class=\"n\">Rb</span><span class=\"p\">,</span> <span class=\"n\">Sr</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">Zr</span><span class=\"p\">,</span> <span class=\"n\">Nb</span><span class=\"p\">,</span> <span class=\"n\">Mo</span><span class=\"p\">,</span> <span class=\"n\">Tc</span><span class=\"p\">,</span> <span class=\"n\">Ru</span><span class=\"p\">,</span> <span class=\"n\">Rh</span><span class=\"p\">,</span> <span class=\"n\">Pd</span><span class=\"p\">,</span> <span class=\"n\">Ag</span><span class=\"p\">,</span> <span class=\"n\">Cd</span><span class=\"p\">,</span> <span class=\"n\">In</span><span class=\"p\">,</span> <span class=\"n\">Sn</span><span class=\"p\">,</span> <span class=\"n\">Sb</span><span class=\"p\">,</span> <span class=\"n\">Te</span><span class=\"p\">,</span> <span class=\"n\">I</span><span class=\"p\">,</span> <span class=\"n\">Xe</span><span class=\"p\">,</span> <span class=\"n\">Cs</span><span class=\"p\">,</span> <span class=\"n\">Ba</span><span class=\"p\">,</span> <span class=\"n\">La</span><span class=\"p\">,</span> <span class=\"n\">Ce</span><span class=\"p\">,</span> <span class=\"n\">Pr</span><span class=\"p\">,</span> <span class=\"n\">Nd</span><span class=\"p\">,</span> <span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Sm</span><span class=\"p\">,</span> <span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Gd</span><span class=\"p\">,</span> <span class=\"n\">Tb</span><span class=\"p\">,</span> <span class=\"n\">Dy</span><span class=\"p\">,</span> <span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Tm</span><span class=\"p\">,</span> <span class=\"n\">Yb</span><span class=\"p\">,</span> <span class=\"n\">Lu</span><span class=\"p\">,</span> <span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Ta</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">Re</span><span class=\"p\">,</span> <span class=\"n\">Os</span><span class=\"p\">,</span> <span class=\"n\">Ir</span><span class=\"p\">,</span> <span class=\"n\">Pt</span><span class=\"p\">,</span> <span class=\"n\">Au</span><span class=\"p\">,</span> <span class=\"n\">Hg</span><span class=\"p\">,</span> <span class=\"n\">Tl</span><span class=\"p\">,</span> <span class=\"n\">Pb</span><span class=\"p\">,</span> <span class=\"n\">Bi</span><span class=\"p\">,</span> <span class=\"n\">Po</span><span class=\"p\">,</span> <span class=\"n\">At</span><span class=\"p\">,</span> <span class=\"n\">Rn</span><span class=\"p\">,</span> <span class=\"n\">Fr</span><span class=\"p\">,</span> <span class=\"n\">Ra</span><span class=\"p\">,</span> <span class=\"n\">Ac</span><span class=\"p\">,</span> <span class=\"n\">Th</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># The periodic table is a dictionary holding the chemical properties of each element.</span>\n<span class=\"o\">...</span> <span class=\"n\">pt</span> <span class=\"o\">=</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">get_periodic_table</span><span class=\"p\">(</span><span class=\"n\">abundance_sum</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"o\">**</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Hydrogen:&#39;</span><span class=\"p\">,</span> <span class=\"n\">pt</span><span class=\"p\">[</span><span class=\"s1\">&#39;H&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">Hydrogen</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;22&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">91790.383216</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">H</span><span class=\"p\">]}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Thulium:&#39;</span><span class=\"p\">,</span> <span class=\"n\">pt</span><span class=\"p\">[</span><span class=\"s1\">&#39;Tm&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">Thulium</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221133112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1204.9083841</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Conway&#39;s constant can be found as the dominant (i.e. maximal real) eigenvalue of the decay matrix:</span>\n<span class=\"o\">...</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">get_dom_eigenvalue</span><span class=\"p\">()</span>\n<span class=\"mf\">1.3035772690342982</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Conway&#39;s constant is root of the degree 71 factor of the characteristic polynomial:</span>\n<span class=\"o\">...</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">get_char_poly</span><span class=\"p\">()</span>\n<span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">18</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">71</span> <span class=\"o\">-</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">69</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">68</span> <span class=\"o\">-</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">67</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">66</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">65</span> <span class=\"o\">+</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">64</span> <span class=\"o\">-</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">63</span> <span class=\"o\">-</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">62</span> <span class=\"o\">-</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">61</span> <span class=\"o\">-</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">60</span> <span class=\"o\">-</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">59</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">58</span> <span class=\"o\">+</span> <span class=\"mi\">5</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">57</span> <span class=\"o\">+</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">56</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">55</span> <span class=\"o\">-</span> <span class=\"mi\">10</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">54</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">53</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">52</span> <span class=\"o\">+</span> <span class=\"mi\">6</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">51</span> <span class=\"o\">+</span> <span class=\"mi\">6</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">50</span> <span class=\"o\">+</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">49</span> <span class=\"o\">+</span> <span class=\"mi\">9</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">48</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">47</span> <span class=\"o\">-</span> <span class=\"mi\">7</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">46</span> <span class=\"o\">-</span> <span class=\"mi\">8</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">45</span> <span class=\"o\">-</span> <span class=\"mi\">8</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">44</span> <span class=\"o\">+</span> <span class=\"mi\">10</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">43</span> <span class=\"o\">+</span> <span class=\"mi\">6</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">42</span> <span class=\"o\">+</span> <span class=\"mi\">8</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">41</span> <span class=\"o\">-</span> <span class=\"mi\">5</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">40</span> <span class=\"o\">-</span> <span class=\"mi\">12</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">39</span> <span class=\"o\">+</span> <span class=\"mi\">7</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">38</span> <span class=\"o\">-</span> <span class=\"mi\">7</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">37</span> <span class=\"o\">+</span> <span class=\"mi\">7</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">36</span> <span class=\"o\">+</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">35</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">34</span> <span class=\"o\">+</span> <span class=\"mi\">10</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">33</span> <span class=\"o\">+</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">32</span> <span class=\"o\">-</span> <span class=\"mi\">6</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">31</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">30</span> <span class=\"o\">-</span> <span class=\"mi\">10</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">29</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">28</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">27</span> <span class=\"o\">+</span> <span class=\"mi\">9</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">26</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">25</span> <span class=\"o\">+</span> <span class=\"mi\">14</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">24</span> <span class=\"o\">-</span> <span class=\"mi\">8</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">23</span> <span class=\"o\">-</span> <span class=\"mi\">7</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">21</span> <span class=\"o\">+</span> <span class=\"mi\">9</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">20</span> <span class=\"o\">+</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">19</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">18</span> <span class=\"o\">-</span> <span class=\"mi\">10</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">17</span> <span class=\"o\">-</span> <span class=\"mi\">7</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">16</span> <span class=\"o\">+</span> <span class=\"mi\">12</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">15</span> <span class=\"o\">+</span> <span class=\"mi\">7</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">14</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">13</span> <span class=\"o\">-</span> <span class=\"mi\">12</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">12</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">11</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">10</span> <span class=\"o\">+</span> <span class=\"mi\">5</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">9</span> <span class=\"o\">+</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">7</span> <span class=\"o\">-</span> <span class=\"mi\">7</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">6</span> <span class=\"o\">+</span> <span class=\"mi\">7</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">5</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">4</span> <span class=\"o\">+</span> <span class=\"mi\">12</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">3</span> <span class=\"o\">-</span> <span class=\"mi\">6</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span> <span class=\"o\">-</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h2 id=\"gray-code\">Gray code</h2>\n\n<p>The following session shows how to use the module to explore a nonstandard look and say sequence. We use the binary number system known as <a href=\"https://en.wikipedia.org/wiki/Gray_code#n-ary_Gray_code\">Gray code</a> to generate the sequence. The corresponding LookAndSay object depends on the <em>say function</em> which converts a positive integer into its Gray code.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">look_and_say</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Define the &quot;say function&quot;</span>\n<span class=\"o\">...</span> <span class=\"k\">def</span> <span class=\"nf\">gray</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"s1\">&#39;&#39;&#39;Returns the binary Gray code of an integer from 1 to 7.&#39;&#39;&#39;</span>\n<span class=\"o\">...</span>     <span class=\"k\">assert</span> <span class=\"n\">num</span> <span class=\"o\">&lt;</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"s2\">&quot;This say function can only count to 7.&quot;</span>\n<span class=\"o\">...</span>     <span class=\"n\">gray_code</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"s1\">&#39;11&#39;</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"s1\">&#39;10&#39;</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"s1\">&#39;110&#39;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"s1\">&#39;111&#39;</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"s1\">&#39;101&#39;</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"s1\">&#39;100&#39;</span><span class=\"p\">}</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">gray_code</span><span class=\"p\">[</span><span class=\"n\">num</span><span class=\"p\">]</span>\n<span class=\"o\">...</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Create the LookAndSay object and generate a look and say sequence</span>\n<span class=\"o\">...</span> <span class=\"n\">gray_ls</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gray_ls</span><span class=\"o\">.</span><span class=\"n\">generate_sequence</span><span class=\"p\">(</span><span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">,</span> <span class=\"n\">terms</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gray_ls</span><span class=\"o\">.</span><span class=\"n\">get_sequence</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;111011110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10110110110&#39;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Use a BinaryChemistry object to determine the chemical properties</span>\n<span class=\"o\">...</span> <span class=\"n\">gray_chem</span> <span class=\"o\">=</span> <span class=\"n\">BinaryChemistry</span><span class=\"p\">(</span><span class=\"n\">gray_ls</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gray_chem</span><span class=\"o\">.</span><span class=\"n\">generate_elements</span><span class=\"p\">(</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gray_chem</span><span class=\"o\">.</span><span class=\"n\">print_periodic_table</span><span class=\"p\">()</span>\n<span class=\"n\">element</span>   <span class=\"n\">string</span>   <span class=\"n\">abundance</span>    <span class=\"n\">decay</span>\n<span class=\"n\">E1</span>        <span class=\"mi\">10</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E3</span><span class=\"p\">]</span>\n<span class=\"n\">E2</span>        <span class=\"mi\">110</span>      <span class=\"mf\">58.5786438</span>   <span class=\"p\">[</span><span class=\"n\">E4</span><span class=\"p\">]</span>\n<span class=\"n\">E3</span>        <span class=\"mi\">1110</span>     <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E1</span><span class=\"p\">,</span> <span class=\"n\">E2</span><span class=\"p\">]</span>\n<span class=\"n\">E4</span>        <span class=\"mi\">11110</span>    <span class=\"mf\">41.4213562</span>   <span class=\"p\">[</span><span class=\"n\">E2</span><span class=\"p\">,</span> <span class=\"n\">E2</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># The dominant eigenvalue of the decay matrix gives the long term</span>\n<span class=\"o\">...</span> <span class=\"c1\"># growth rate of look and say sequences.</span>\n<span class=\"o\">...</span> <span class=\"n\">gray_chem</span><span class=\"o\">.</span><span class=\"n\">get_dom_eigenvalue</span><span class=\"p\">()</span>\n<span class=\"mf\">1.4142135623730958</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># The growth rate is the maximal real root of the characteristic polynomial</span>\n<span class=\"o\">...</span> <span class=\"n\">gray_chem</span><span class=\"o\">.</span><span class=\"n\">get_char_poly</span><span class=\"p\">()</span>\n<span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h2 id=\"standard-ternary\">Standard ternary</h2>\n\n<p>The following session illustrates how to use the module to explore look and say sequences using the standard ternary number system (i.e. using base 3 with digits 0, 1, and 2). The results are similar to those discussed <a href=\"http://www.njohnston.ca/2011/01/further-variants-of-the-look-and-say-sequence/\">here</a>. </p>\n\n<p>To construct the corresponding LookAndSay object requires a <em>say function</em> which, in this case, is a function that converts an integer to it's standard ternary representation. The construction of the Chemistry object requires both the LookAndSay object as well as a <em>splitting function</em> which determines when the terms of the look and say sequences split. In this case, one can show that the terms will always split after a run of 0's as well as between a 2 (on the left) and either a 10 or a 1110 (on the right). We use a SplitFuncFactory object to create the splitting function. </p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">look_and_say</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Define a &quot;say function&quot;</span>\n<span class=\"o\">...</span> <span class=\"k\">def</span> <span class=\"nf\">ternary</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"s1\">&#39;&#39;&#39;Returns the ternary representation of a nonnegative integer&#39;&#39;&#39;</span>\n<span class=\"o\">...</span>     <span class=\"k\">if</span> <span class=\"n\">num</span> <span class=\"o\">&lt;</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">ternary</span><span class=\"p\">(</span><span class=\"n\">num</span> <span class=\"o\">//</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">num</span> <span class=\"o\">%</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>  \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Use the Split Function Factory to create a split function:</span>\n<span class=\"o\">...</span> <span class=\"n\">sff</span> <span class=\"o\">=</span> <span class=\"n\">SplitFuncFactory</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">declare_split_after</span><span class=\"p\">(</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">declare_splitting_pairs</span><span class=\"p\">((</span><span class=\"s1\">&#39;2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1110&#39;</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">&#39;2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10&#39;</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span> <span class=\"o\">=</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">get_split</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Instantiate the LookAndSay and Chemistry objects:</span>\n<span class=\"o\">...</span> <span class=\"n\">ternary_ls</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">(</span><span class=\"n\">ternary</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ternary_chem</span> <span class=\"o\">=</span> <span class=\"n\">Chemistry</span><span class=\"p\">(</span><span class=\"n\">ternary_ls</span><span class=\"p\">,</span> <span class=\"n\">split</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Generate elements and order them according to relative abundances:</span>\n<span class=\"o\">...</span> <span class=\"n\">ternary_chem</span><span class=\"o\">.</span><span class=\"n\">generate_elements</span><span class=\"p\">(</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ternary_chem</span><span class=\"o\">.</span><span class=\"n\">order_elements</span><span class=\"p\">(</span><span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Print chemical properties:</span>\n<span class=\"o\">...</span> <span class=\"n\">ternary_chem</span><span class=\"o\">.</span><span class=\"n\">print_periodic_table</span><span class=\"p\">()</span>\n<span class=\"n\">element</span>   <span class=\"n\">string</span>     <span class=\"n\">abundance</span>    <span class=\"n\">decay</span>\n<span class=\"n\">E1</span>        <span class=\"mi\">10</span>         <span class=\"mf\">18.5037375</span>   <span class=\"p\">[</span><span class=\"n\">E4</span><span class=\"p\">]</span>\n<span class=\"n\">E2</span>        <span class=\"mi\">22110</span>      <span class=\"mf\">13.9680582</span>   <span class=\"p\">[</span><span class=\"n\">E5</span><span class=\"p\">]</span>\n<span class=\"n\">E3</span>        <span class=\"mi\">2110</span>       <span class=\"mf\">13.9680582</span>   <span class=\"p\">[</span><span class=\"n\">E6</span><span class=\"p\">]</span>\n<span class=\"n\">E4</span>        <span class=\"mi\">1110</span>       <span class=\"mf\">13.9680582</span>   <span class=\"p\">[</span><span class=\"n\">E1</span><span class=\"p\">,</span> <span class=\"n\">E7</span><span class=\"p\">]</span>\n<span class=\"n\">E5</span>        <span class=\"mi\">222110</span>     <span class=\"mf\">10.5441752</span>   <span class=\"p\">[</span><span class=\"n\">E1</span><span class=\"p\">,</span> <span class=\"n\">E2</span><span class=\"p\">]</span>\n<span class=\"n\">E6</span>        <span class=\"mi\">122110</span>     <span class=\"mf\">10.5441752</span>   <span class=\"p\">[</span><span class=\"n\">E8</span><span class=\"p\">]</span>\n<span class=\"n\">E7</span>        <span class=\"mi\">110</span>        <span class=\"mf\">10.5441752</span>   <span class=\"p\">[</span><span class=\"n\">E3</span><span class=\"p\">]</span>\n<span class=\"n\">E8</span>        <span class=\"mi\">11222110</span>   <span class=\"mf\">7.9595623</span>    <span class=\"p\">[</span><span class=\"n\">E3</span><span class=\"p\">,</span> <span class=\"n\">E2</span><span class=\"p\">]</span>\n<span class=\"n\">E9</span>        <span class=\"mi\">222112</span>     <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E1</span><span class=\"p\">,</span> <span class=\"n\">E10</span><span class=\"p\">]</span>\n<span class=\"n\">E10</span>       <span class=\"mi\">22112</span>      <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E9</span><span class=\"p\">]</span>\n<span class=\"n\">E11</span>       <span class=\"mi\">212221</span>     <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E16</span><span class=\"p\">,</span> <span class=\"n\">E4</span><span class=\"p\">,</span> <span class=\"n\">E13</span><span class=\"p\">]</span>\n<span class=\"n\">E12</span>       <span class=\"mi\">2112</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E14</span><span class=\"p\">]</span>\n<span class=\"n\">E13</span>       <span class=\"mi\">211</span>        <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E15</span><span class=\"p\">]</span>\n<span class=\"n\">E14</span>       <span class=\"mi\">122112</span>     <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E17</span><span class=\"p\">]</span>\n<span class=\"n\">E15</span>       <span class=\"mi\">1221</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E18</span><span class=\"p\">]</span>\n<span class=\"n\">E16</span>       <span class=\"mi\">12</span>         <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E20</span><span class=\"p\">]</span>\n<span class=\"n\">E17</span>       <span class=\"mi\">11222112</span>   <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E3</span><span class=\"p\">,</span> <span class=\"n\">E10</span><span class=\"p\">]</span>\n<span class=\"n\">E18</span>       <span class=\"mi\">112211</span>     <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E11</span><span class=\"p\">]</span>\n<span class=\"n\">E19</span>       <span class=\"mi\">112</span>        <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E12</span><span class=\"p\">]</span>\n<span class=\"n\">E20</span>       <span class=\"mi\">1112</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E1</span><span class=\"p\">,</span> <span class=\"n\">E19</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Show the dominant eigenvalue which gives the generic growth rate of the look and say sequences.</span>\n<span class=\"o\">...</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ternary_chem</span><span class=\"o\">.</span><span class=\"n\">get_dom_eigenvalue</span><span class=\"p\">())</span>\n<span class=\"mf\">1.3247179572447458</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># The characteristic polynomial formatted in latex:</span>\n<span class=\"o\">...</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ternary_chem</span><span class=\"o\">.</span><span class=\"n\">get_char_poly</span><span class=\"p\">(</span><span class=\"n\">latex</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n\\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">6</span><span class=\"p\">}</span> \\<span class=\"n\">left</span><span class=\"p\">(</span>\\<span class=\"k\">lambda</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\\<span class=\"n\">right</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">}</span> \\<span class=\"n\">left</span><span class=\"p\">(</span>\\<span class=\"k\">lambda</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\\<span class=\"n\">right</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">}</span> \\<span class=\"n\">left</span><span class=\"p\">(</span>\\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">}</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\\<span class=\"n\">right</span><span class=\"p\">)</span> \\<span class=\"n\">left</span><span class=\"p\">(</span>\\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">3</span><span class=\"p\">}</span> <span class=\"o\">-</span> \\<span class=\"k\">lambda</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\\<span class=\"n\">right</span><span class=\"p\">)</span> \\<span class=\"n\">left</span><span class=\"p\">(</span>\\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">5</span><span class=\"p\">}</span> <span class=\"o\">-</span> \\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">3</span><span class=\"p\">}</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\\<span class=\"n\">right</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><a name=\"detailed-documentation\"></a></p>\n\n<p><a name=\"std-decimal-las\"></a></p>\n\n<h1 id=\"look-and-say-sequences\">Look and say sequences</h1>\n\n<p>The fundamental class in this module, <code>LookAndSay</code>, is responsible for holding the logic to create look and say sequences. For example, the following shows how to create a standard decimal look and say sequence with 30 terms starting with the seed 555. </p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">look_and_say</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># The default LookAndSay object uses the standard decimal number system:</span>\n<span class=\"o\">...</span> <span class=\"n\">decimal</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Generate a look and say sequence</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">generate_sequence</span><span class=\"p\">(</span><span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"s1\">&#39;555&#39;</span><span class=\"p\">,</span> <span class=\"n\">terms</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">get_sequence</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;555&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;35&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1315&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;11131115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;31133115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1321232115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;111312111213122115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;311311123112111311222115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1321133112132112311321322115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;111312212321121113122112132113121113222115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;31131122111213122112311311222112111312211311123113322115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;13211321223112111311222112132113213221123113112221133112132123222115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;11131221131211221321123113213221121113122113121113222112132113213221232112111312111213322115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;311311222113111221221113122112132113121113222112311311222113111231133221121113122113121113221112131221123113111231121123222115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1321132132211331221122311311222112111312211311123113322112132113213221133112132123222112311311222113111231132231121113112221121321133112132112211213322115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;111312211312111322212311222122132113213221123113112221133112132123222112111312211312111322212321121113121112133221121321132132211331121321132213211231132132211211131221232112111312212221121123222115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;311311222113111231133211121321321122111312211312111322211213211321322123211211131211121332211231131122211311123113321112131221123113111231121123222112111312211312111322212321121113122113221113122112132113121113222112311311221112131221123113112211322112211213322115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;13211321322113311213212312311211131211131221223113112221131112311332211211131221131211132211121312211231131112311211232221121321132132211331121321231231121113112221121321133112132112211213322112311311222113111231133211121312211231131122211322311311222112111312211311123113322112132113212231121113112221121321132122211322212221121123222115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;111312211312111322212321121113121112131112132112311311123113112211221321132132211331121321232221123113112221131112311322311211131122211213211331121321122112133221121113122113121113222123211211131211121311121321123113213221121113122123211211131221222112112322211213211321322113311213212312311211131122211213211321322113221321132132211231131122211331121321232221121113122113121122132112311321322112111312211312113221133211322112211213322115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;3113112221131112311332111213122112311311123112111331121113122112132113311213211321222122111312211312111322212321121113121112133221121321132132211331121321132213211231132132211211131221232112111312212221121123222112311311222113111231133211121312211231131112311211133112111312211213211312111322211231131122111213122112311311221132211221121332211211131221131211132221232112111312111213111213211231132132211211131221131211132221132211131221131211132221121321132132212321121113121112133221123113112221131112212211131221121321131211132221123113112221131112211322212312211322212221121123222115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;132113213221133112132123123112111311222112132113311213211231232112311311222112111312212321121113122113121132112231131122211311123113321112131221123113111231121123222112111312211312111322212321121113122113221113122112132113121113222112311311221112131221123113112211322112211213322112132113213221133112132123123112111311222112132113311213211231232112311311222112111312211311123113322112132113212231121113112221121321132122211322212221121123222112311311222113111231133211121312211231131112311211133112111312211213211312111322211231131122211311123113322113223113112221131112311332211211131221131211132211121312211231131112311211232221121321132132211331221122311311222112111312211311123113322112132113213221133122211332111213112221133211322112211213322115&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1113122113121113222123211211131211121311121321123113213221121113122123211211131221121311121312211213211321322112311311221112131221123113112221131112211312212213211321322113311213212312311211131122211213211331121321122112133221123113112221131112311332111213122112311311222113223113112221121113122113111231133221121321132122311211131122211213211321222113222122211211232221121113122113121113222123211211131211121311121321123113213221121113122123211211131221121311121312211213211321322112311311222113311213212322211211131221131211221321123113213221121113122113121132211332113221122112133221121321132132211331121321231231121113112221121321133112132112312321123113112221121113122113111231133221121321132132211331121321232221132213211321322113311213212322211231131122211311123113223112111311222112132113311213211221121332211211131221131211132221231122212213211321322112311311222113311213212322211211131221131211132221231132212312311211132132212312211322212221121123222115&#39;</span><span class=\"p\">,</span> <span class=\"sspan><span class=\"p\">,</span> <span class=\"sspan><span class=\"p\">,</span> <span class=\"sspan><span class=\"p\">,</span> <span class=\"sspan><span class=\"p\">,</span> <span class=\"sspan><span class=\"p\">,</span> <span class=\"sspan><span class=\"p\">,</span> <span class=\"sspan><span class=\"p\">,</span> <span class=\"sspan><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>We can extract the ratios of lengths of the terms in the sequence or just the last length ratio:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">get_length_ratios</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mf\">0.6666666666666666</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">1.25</span><span class=\"p\">,</span> <span class=\"mf\">1.8</span><span class=\"p\">,</span> <span class=\"mf\">1.3333333333333333</span><span class=\"p\">,</span> <span class=\"mf\">1.1666666666666667</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"mf\">1.3333333333333333</span><span class=\"p\">,</span> <span class=\"mf\">1.2142857142857142</span><span class=\"p\">,</span> <span class=\"mf\">1.3529411764705883</span><span class=\"p\">,</span> <span class=\"mf\">1.3695652173913044</span><span class=\"p\">,</span> <span class=\"mf\">1.2222222222222223</span><span class=\"p\">,</span> <span class=\"mf\">1.2857142857142858</span><span class=\"p\">,</span> <span class=\"mf\">1.3333333333333333</span><span class=\"p\">,</span> <span class=\"mf\">1.2803030303030303</span><span class=\"p\">,</span> <span class=\"mf\">1.2958579881656804</span><span class=\"p\">,</span> <span class=\"mf\">1.3378995433789955</span><span class=\"p\">,</span> <span class=\"mf\">1.2798634812286689</span><span class=\"p\">,</span> <span class=\"mf\">1.2853333333333334</span><span class=\"p\">,</span> <span class=\"mf\">1.329875518672199</span><span class=\"p\">,</span> <span class=\"mf\">1.2917316692667706</span><span class=\"p\">,</span> <span class=\"mf\">1.2958937198067633</span><span class=\"p\">,</span> <span class=\"mf\">1.3131407269338304</span><span class=\"p\">,</span> <span class=\"mf\">1.304471256210078</span><span class=\"p\">,</span> <span class=\"mf\">1.294341675734494</span><span class=\"p\">,</span> <span class=\"mf\">1.3127364438839848</span><span class=\"p\">,</span> <span class=\"mf\">1.3080371437720142</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">get_last_length_ratio</span><span class=\"p\">()</span>\n<span class=\"mf\">1.3080371437720142</span>\n</code></pre></div>\n\n<p>The fundamental operation in the <code>LookAndSay</code> class used to compute each term in a look and say sequence is the <code>say_what_you_see()</code> method:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">say_what_you_see</span><span class=\"p\">(</span><span class=\"s1\">&#39;2222&#39;</span><span class=\"p\">)</span>\n<span class=\"s1\">&#39;42&#39;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">say_what_you_see</span><span class=\"p\">(</span><span class=\"s1\">&#39;2334445555&#39;</span><span class=\"p\">)</span>\n<span class=\"s1\">&#39;12233445&#39;</span>\n</code></pre></div>\n\n<p>By default, when we see a run of four 2's, we <em>say</em> '42'. If we alter the way we <em>say</em> what we see, we get into nonstandard look and say sequences.</p>\n\n<h2 id=\"setting-up-nonstandard-look-and-say-sequences-with-a-say-function\">Setting up nonstandard look and say sequences with a say function</h2>\n\n<p>To start exploring with a nonstandard look and say sequence, the first thing to do is define a <em>say function</em>. The say function will determine how the say-what-you-see operation acts on a run of $n$ consecutive digits $d$, written with Conway's exponent notation as $d^n$. The say function can take one or two parameters:</p>\n\n<ul>\n<li><p>If the say function accepts one parameter, the look and say sequence will correspond to the operation $d^n\\to say(n)d$.</p></li>\n<li><p>If the say function accepts two parameters, the look and say sequence will correspond to the operation $d^n\\to say(n, d)$.</p></li>\n</ul>\n\n<p>For example, the following say function can be used to create a Roman numeral look and say sequence.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">roman_say</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"s1\">&#39;&#39;&#39;Returns the Roman numeral for n assuming 0&lt;n&lt;10&#39;&#39;&#39;</span>\n<span class=\"o\">...</span>     <span class=\"k\">assert</span> <span class=\"n\">n</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s2\">&quot;This Roman can only count to 9.&quot;</span>\n<span class=\"o\">...</span>     <span class=\"n\">roman</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"s1\">&#39;I&#39;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"s1\">&#39;II&#39;</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"s1\">&#39;III&#39;</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"s1\">&#39;IV&#39;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"s1\">&#39;V&#39;</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"s1\">&#39;VI&#39;</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"s1\">&#39;VII&#39;</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"s1\">&#39;VIII&#39;</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">:</span><span class=\"s1\">&#39;IX&#39;</span><span class=\"p\">}</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">roman</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>To get a Roman look and say sequence, pass the say function into the constructor of a <code>LookAndSay</code> object:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">roman_ls</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">(</span><span class=\"n\">roman_say</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">roman_ls</span><span class=\"o\">.</span><span class=\"n\">generate_sequence</span><span class=\"p\">(</span><span class=\"s1\">&#39;I&#39;</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">roman_ls</span><span class=\"o\">.</span><span class=\"n\">get_sequence</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;I&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;II&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;III&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IIII&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IVI&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IIIVII&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IIIIIVIII&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;VIIVIIII&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IVIIIIVIVI&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IIIVIVIIVIIIVII&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IIIIIVIIIVIIIIVIIIIIVIII&#39;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">roman_ls</span><span class=\"o\">.</span><span class=\"n\">generate_sequence</span><span class=\"p\">(</span><span class=\"s1\">&#39;V&#39;</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">roman_ls</span><span class=\"o\">.</span><span class=\"n\">get_sequence</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;V&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IIIV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IIIIIV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;VIIV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IVIIIIV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IIIVIVIIV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IIIIIVIIIVIIIIV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;VIIVIIIIIVIVIIV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IVIIIIVVIIVIIIVIIIIV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;IIIVIVIIIVIIIIVIIIIIVIVIIV&#39;</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p><a name=\"std-binary-las\"></a></p>\n\n<h2 id=\"standard-binary\">Standard binary</h2>\n\n<p>Here is a standard binary look and say:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">binary_say</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"s2\">&quot;</span><span class=\"si\">{0:b}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_ls</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">(</span><span class=\"n\">binary_say</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_ls</span><span class=\"o\">.</span><span class=\"n\">generate_sequence</span><span class=\"p\">(</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_ls</span><span class=\"o\">.</span><span class=\"n\">get_sequence</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;11110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;100110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1110010110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;111100111010110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;100110011110111010110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1110010110010011011110111010110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1111001110101100111001011010011011110111010110&#39;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_ls</span><span class=\"o\">.</span><span class=\"n\">generate_sequence</span><span class=\"p\">(</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_ls</span><span class=\"o\">.</span><span class=\"n\">get_sequence</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;11&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;101&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;111011&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;11110101&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;100110111011&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;111001011011110101&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;111100111010110100110111011&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;100110011110111010110111001011011110101&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1110010110010011011110111010110111100111010110100110111011&#39;</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>The chemistry of the standard binary look and say sequences is <a href=\"#std-binary-chem\">determined below</a>.</p>\n\n<h2 id=\"two-parameter-say-functions\">Two parameter say functions</h2>\n\n<p>Here is a <em>look-and-say-again</em> from the paper <a href=\"https://arxiv.org/abs/2006.06837\"><em>Stuttering Conway Sequences Are Still Conway Sequences</em> by Brier et al</a>.\nThe say function for this example corresponds to the decay $d^n\\to nndd$.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">say_again</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">d</span>\n<span class=\"o\">...</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">look_and_say_again</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">(</span><span class=\"n\">say_again</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">look_and_say_again</span><span class=\"o\">.</span><span class=\"n\">generate_sequence</span><span class=\"p\">(</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">look_and_say_again</span><span class=\"o\">.</span><span class=\"n\">get_sequence</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1111&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;4411&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;22442211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2222224422222211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;6622224466222211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;226644222244226644222211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2222226622444422224422222266224444222211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;662222662222444444222244662222662222444444222211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;22664422226644226644442222442266442222664422664444222211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2222226622444422226622442222226644444422224422222266224444222266224422222266444444222211&#39;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">look_and_say_again</span><span class=\"o\">.</span><span class=\"n\">generate_sequence</span><span class=\"p\">(</span><span class=\"s1\">&#39;2&#39;</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">look_and_say_again</span><span class=\"o\">.</span><span class=\"n\">get_sequence</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1122&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;22112222&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;222222114422&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;6622221122442222&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;226644222211222222444422&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;22222266224444222211662244442222&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;6622226622224444442222112266222244444422&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;226644222266442266444422221122222266442266442222&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;222222662244442222662244222222664444442222116622226622442222226622444422&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;66222266222244444422226622222244662222666644442222112266442222662222224466222266222244442222&#39;</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>Here is <a href=\"https://www.cambridge.org/core/journals/bulletin-of-the-australian-mathematical-society/article/abs/look-knave/BFC51822DED97095C96ABD2255AEDC2A\">Morrill's <em>Look Knave</em></a>:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">knave_say</span><span class=\"p\">(</span><span class=\"n\">bit_count</span><span class=\"p\">,</span> <span class=\"n\">bit</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"n\">flip</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">}</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"s2\">&quot;</span><span class=\"si\">{0:b}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">bit_count</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">flip</span><span class=\"p\">[</span><span class=\"n\">bit</span><span class=\"p\">]</span>\n<span class=\"o\">...</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">look_knave</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">(</span><span class=\"n\">knave_say</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">look_knave</span><span class=\"o\">.</span><span class=\"n\">generate_sequence</span><span class=\"p\">(</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">look_knave</span><span class=\"o\">.</span><span class=\"n\">get_sequence</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;11&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;100&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10101&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011101110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10111101111011&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011100011100011100&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011110111110111110101&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011100011101011101011101110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10111101111101110111101110111101111011&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10111000111010111101110001111011100011100011100&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011110111110111011100011110111100011110111110111110101&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011100011101011110111101111000111000111100011101011101011101110&#39;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">look_knave</span><span class=\"o\">.</span><span class=\"n\">generate_sequence</span><span class=\"p\">(</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">look_knave</span><span class=\"o\">.</span><span class=\"n\">get_sequence</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011100&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011110101&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011100011101110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10111101111101111011&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011100011101011100011100&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1011110111110111011110111110101&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;101110001110101111011100011101011101110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10111101111101110111000111101111101110111101111011&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10111000111010111101111011110001110101111011100011100011100&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10111101111101110111000111000111000111110111011100011110111110111110101&#39;</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<h1 id=\"splitting-functions\">Splitting functions</h1>\n\n<p>A splitting function for a look and say sequence is a function <code>split(s)</code> which returns a list <code>[s0, s1, ...]</code> of substrings of the string <code>s</code> such that <code>s</code> equals the concatenation <code>s1 + s2 + ...</code> and the say-what-you-see operation applied to <code>s</code> is equal to the concatenation of the say-what-you-see operation applied to each <code>s1, s2, ...</code>.</p>\n\n<p><a name=\"Conway-split\"></a></p>\n\n<h2 id=\"conways-splitting-function\">Conway's splitting function</h2>\n\n<p>The terms of a standard decimal look and say sequences split into elements according to Conway's Splitting Theorem. Conway's conditions for splitting a string are implemented into the splitting function <code>split_Conway()</code> as illustrated below:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">look_and_say</span> <span class=\"kn\">import</span> <span class=\"n\">split_Conway</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split_Conway</span><span class=\"p\">(</span><span class=\"s1\">&#39;1211132213&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;12&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;22&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;13&#39;</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p><a name='split-func-factory'></a></p>\n\n<h2 id=\"split-function-factories\">Split function factories</h2>\n\n<p>One can use a <code>SplitFuncFactory</code> object to create a splitting function. \nConditions for splitting are specified with the following methods:</p>\n\n<table>\n<thead>\n<tr>\n  <th>method</th>\n  <th>splitting condition</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>declare_split_after((L,R))</code></td>\n  <td>Specify pair(s) of chunks in the form (L, R) such that LR always splits as L.R.</td>\n</tr>\n<tr>\n  <td><code>declare_split_after(L)</code></td>\n  <td>Specify chunk(s) L such that LR splits for every possible R (assuming the last character of L and the first character of R are distinct).</td>\n</tr>\n<tr>\n  <td><code>declare_split_before(R)</code></td>\n  <td>Specify chunk(s) R such that LR splits for every possible L (assuming the last character of L and the first character of R are distinct).</td>\n</tr>\n</tbody>\n</table>\n\n<p>After the splitting conditions are specified, the <code>get_split()</code> method will return the splitting function. </p>\n\n<p>For example, the following shows how to create a splitting function which splits a string at the end of every run of 0's.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span> <span class=\"o\">=</span> <span class=\"n\">SplitFuncFactory</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">declare_split_after</span><span class=\"p\">(</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span> <span class=\"o\">=</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">get_split</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;1101230022200012301325023&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;110&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;12300&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;222000&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1230&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;13250&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;23&#39;</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>You can specify multiple chunks to split after:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span> <span class=\"o\">=</span> <span class=\"n\">SplitFuncFactory</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">declare_split_after</span><span class=\"p\">(</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;20&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span> <span class=\"o\">=</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">get_split</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;12311223323112011200011110234234&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2311&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;22332311&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;20&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;11&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;20001111&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;0234234&#39;</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>Here is an example specifying strings to split before:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span> <span class=\"o\">=</span> <span class=\"n\">SplitFuncFactory</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">declare_split_before</span><span class=\"p\">(</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;31&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span> <span class=\"o\">=</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">get_split</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;12311223323112011200011110234234&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;12&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;31122332&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;3112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;0112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;0001111&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;0234234&#39;</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>Here is an example where multiple splitting pairs are declared:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span> <span class=\"o\">=</span> <span class=\"n\">SplitFuncFactory</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">declare_splitting_pairs</span><span class=\"p\">((</span><span class=\"s1\">&#39;311&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;223&#39;</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1&#39;</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span> <span class=\"o\">=</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">get_split</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;12311223323112011200011110234234&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;12311&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2233231120&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;112000&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;11110234234&#39;</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>Here is another example, where multiple methods are used to declare the splitting conditions:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span> <span class=\"o\">=</span> <span class=\"n\">SplitFuncFactory</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">declare_split_before</span><span class=\"p\">(</span><span class=\"s1\">&#39;111&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">declare_split_after</span><span class=\"p\">(</span><span class=\"s1\">&#39;2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;30&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">declare_splitting_pairs</span><span class=\"p\">((</span><span class=\"s1\">&#39;11&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;333&#39;</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span> <span class=\"o\">=</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">get_split</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;1234411154211333234530411113333344&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">&#39;12&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;344&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;111542&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;11&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;3332&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;34530&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;4&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1111&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;3333344&#39;</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<h1 id=\"chemistry\">Chemistry</h1>\n\n<h2 id=\"generating-elements\">Generating elements</h2>\n\n<p><a name='std-decimal-chem'></a>\nGiven a look and say sequence equipped with a splitting function, a <code>Chemistry</code> object can search for all the elements (i.e. substrings resulting from completely splitting the terms) of the look and say sequence. The default <code>Chemistry</code> object corresponds to standard decimal look and say sequences uses <a href=\"#Conway-split\">Conway's splitting function</a>. For example, the following session preforms a search for all elements in the decimal look and say sequence (from <a href=\"#std-decimal-las\">above</a>) generated by seed 1. The search yields 92 elements, which agrees with Conway's results:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span> <span class=\"o\">=</span> <span class=\"n\">Chemistry</span><span class=\"p\">(</span><span class=\"n\">decimal</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">generate_elements</span><span class=\"p\">(</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">elements</span> <span class=\"o\">=</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">get_elements</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">elements</span><span class=\"p\">)</span>\n<span class=\"mi\">92</span>\n</code></pre></div>\n\n<h2 id=\"element-properties-and-periodic-tables\">Element properties and periodic tables</h2>\n\n<p>Each <code>Element</code> is equipped with a name, string, and a decay into other elements. The following examples illustrate how to work with elements using <a href=\"#std-decimal-chem\">Conway's chemistry for standard decimal look and say sequences</a>. First, you can get any particular element using its name. You can extract any of the attributes of an element with the appropriate getters as in the following example:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">get_element</span><span class=\"p\">(</span><span class=\"s1\">&#39;Rh&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">get_name</span><span class=\"p\">()</span>\n<span class=\"s1\">&#39;Rh&#39;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">get_string</span><span class=\"p\">()</span>\n<span class=\"s1\">&#39;311311222113111221131221&#39;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">get_decay</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Ru</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>The collection of all the elements and their properties (including their limiting relative abundance in the look and say sequence) is held in the <em>periodic table</em>. You can get the periodic table as a dictionary:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">get_periodic_table</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;22&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">9.1790383</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">H</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;He&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13112221133211322112211213322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3237297</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Li</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Li&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;312211322212221121123222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.4220067</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">He</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Be&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312211312113221133211322112211213322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2263886</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Li</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;B&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321132122211322212221121123222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.295115</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Be</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112211322112211213322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3847053</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">B</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312212221121123222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.501493</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;O&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132112211213322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.6537349</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;31121123222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.852194</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">O</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ne&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111213322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.1109007</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">F</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Na&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;123222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.4481449</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ne</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Mg&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.8850441</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Na</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Al&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.4573007</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Mg</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Si&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">3.2032813</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Al</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.4895887</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Si</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113122112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.9417939</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">P</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Cl&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.5312784</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">S</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ar&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">3.299717</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Cl</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">4.3014361</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ar</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ca&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;12&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">5.6072543</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">K</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Sc&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112221133112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.9302097</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ti&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221131112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.2126003</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Sc</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13211312&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.5807182</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ti</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Cr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;31132&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.0605883</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">V</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Mn&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111311222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.686136</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Cr</span><span class=\"p\">,</span> <span class=\"n\">Si</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Fe&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13122112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">3.5015859</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Mn</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Co&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;32112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">4.5645877</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Fe</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ni&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11133112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.3871124</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Zn</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Cu&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;131112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.8082082</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ni</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Zn&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;312&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.3571391</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Cu</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ga&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13221133122211332&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1447891</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Ac</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Zn</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ge&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;31131122211311122113222&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1887437</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Ga</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;As&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221131211322113322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0027246</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Na</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Se&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13211321222113222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0035518</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">As</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Br&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112211322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.00463</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Se</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Kr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0060355</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Br</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Rb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321122112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0078678</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Kr</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Sr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3112112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0102563</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Rb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1112133&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0133699</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Sr</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Zr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;12322211331222113112211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0174286</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Tc</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Nb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113122113322113111221131221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0227196</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Zr</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Mo&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13211322211312113211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0296167</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Nb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Tc&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311322113212221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0386077</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Mo</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ru&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132211331222113112211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0328995</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Tc</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Rh&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311222113111221131221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.042887</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Ru</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pd&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312211312113211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0559065</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Rh</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ag&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132113212221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0728785</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pd</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Cd&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0950027</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ag</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;In&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1238434</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Cd</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Sn&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1614395</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">In</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Sb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3112221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2104488</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Sn</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Te&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1322113312211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2743363</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Sb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311222113111221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3576186</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Te</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Xe&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221131211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.4661834</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Cs&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13211321&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.6077061</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Xe</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ba&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.7921919</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Cs</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;La&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.0326833</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ba</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ce&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321133112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.3461825</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">La</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;31131112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.7548529</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ce</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Nd&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.2875864</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pr</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pm&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.9820456</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Nd</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Sm&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311332&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1.5408115</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Zn</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Eu&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113222&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.0085669</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Sm</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Gd&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13221133112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.1662973</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Tb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112221131112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2.8239359</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Gd</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Dy&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312211312&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">3.6812186</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Tb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ho&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321132&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">4.7987529</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Dy</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Er&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311222&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1098596</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Pm</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Tm&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221133112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1204908</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Yb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321131112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1570691</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Tm</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Lu&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311312&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2047517</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Yb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Hf&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11132&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2669097</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Lu</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ta&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13112221133211322112211213322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0242077</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;312211322212221121123222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0315567</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ta</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Re&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312211312113221133211322112211213322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0169288</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Os&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321132122211322212221121123222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.022068</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Re</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ir&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112211322112211213322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0287673</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Os</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pt&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312212221121123222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0375005</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ir</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Au&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132112211213322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0488847</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pt</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Hg&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;31121123222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.063725</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Au</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Tl&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111213322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0830705</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Hg</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;123222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1082888</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Tl</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Bi&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1411629</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Pb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Po&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1840167</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Bi</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;At&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.23988</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Po</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Rn&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3127021</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">At</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Fr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113122113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.4076313</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Rn</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ra&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.5313789</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Fr</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ac&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.6926935</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ra</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Th&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.7581905</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ac</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pa&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.9883599</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Th</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;U&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0102563</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pa</span><span class=\"p\">]}}</span>\n</code></pre></div>\n\n<p>By default, the relative abundances are given in percentages. You can scale the abundances by setting the total sum of all the abundances. You can also set the decimal place precision of the abundances as in the following:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">get_periodic_table</span><span class=\"p\">(</span><span class=\"n\">abundance_sum</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"o\">**</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">dec_places</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;22&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">91790.38</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">H</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;He&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13112221133211322112211213322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">3237.3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Li</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Li&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;312211322212221121123222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">4220.07</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">He</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Be&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312211312113221133211322112211213322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2263.89</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Li</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;B&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321132122211322212221121123222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2951.15</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Be</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112211322112211213322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">3847.05</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">B</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312212221121123222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">5014.93</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;O&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132112211213322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">6537.35</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;31121123222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">8521.94</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">O</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ne&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111213322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">11109.01</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">F</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Na&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;123222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">14481.45</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ne</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Mg&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">18850.44</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Na</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Al&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">24573.01</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Mg</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Si&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">32032.81</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Al</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">14895.89</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Si</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113122112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">19417.94</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">P</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Cl&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">25312.78</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">S</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ar&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">32997.17</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Cl</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">43014.36</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ar</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ca&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;12&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">56072.54</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">K</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Sc&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112221133112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">9302.1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ti&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221131112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">12126.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Sc</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13211312&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">15807.18</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ti</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Cr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;31132&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">20605.88</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">V</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Mn&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111311222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">26861.36</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Cr</span><span class=\"p\">,</span> <span class=\"n\">Si</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Fe&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13122112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">35015.86</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Mn</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Co&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;32112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">45645.88</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Fe</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ni&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11133112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">13871.12</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Zn</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Cu&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;131112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">18082.08</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ni</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Zn&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;312&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">23571.39</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Cu</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ga&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13221133122211332&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1447.89</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Ac</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Zn</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ge&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;31131122211311122113222&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1887.44</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Ga</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;As&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221131211322113322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">27.25</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Na</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Se&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13211321222113222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">35.52</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">As</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Br&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112211322112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">46.3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Se</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Kr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221222112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">60.36</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Br</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Rb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321122112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">78.68</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Kr</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Sr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3112112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">102.56</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Rb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1112133&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">133.7</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Sr</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Zr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;12322211331222113112211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">174.29</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Tc</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Nb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113122113322113111221131221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">227.2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Zr</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Mo&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13211322211312113211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">296.17</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Nb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Tc&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311322113212221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">386.08</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Mo</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ru&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132211331222113112211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">328.99</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Tc</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Rh&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311222113111221131221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">428.87</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Ru</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pd&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312211312113211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">559.07</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Rh</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ag&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132113212221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">728.78</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pd</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Cd&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">950.03</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ag</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;In&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1238.43</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Cd</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Sn&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1614.39</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">In</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Sb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3112221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2104.49</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Sn</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Te&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1322113312211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2743.36</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Sb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311222113111221&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">3576.19</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Te</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Xe&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221131211&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">4661.83</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Cs&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13211321&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">6077.06</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Xe</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ba&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">7921.92</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Cs</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;La&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">10326.83</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ba</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ce&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321133112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">13461.83</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">La</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;31131112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">17548.53</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ce</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Nd&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">22875.86</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pr</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pm&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">29820.46</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Nd</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Sm&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311332&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">15408.12</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Zn</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Eu&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113222&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">20085.67</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Sm</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Gd&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13221133112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">21662.97</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Tb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112221131112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">28239.36</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Gd</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Dy&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312211312&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">36812.19</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Tb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ho&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321132&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">47987.53</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Dy</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Er&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311222&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1098.6</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Pm</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Tm&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11131221133112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1204.91</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Yb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321131112&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1570.69</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Tm</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Lu&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311312&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2047.52</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Yb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Hf&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;11132&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2669.1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Lu</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ta&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13112221133211322112211213322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">242.08</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;312211322212221121123222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">315.57</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ta</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Re&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312211312113221133211322112211213322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">169.29</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Os&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1321132122211322212221121123222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">220.68</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Re</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ir&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113112211322112211213322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">287.67</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Os</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pt&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111312212221121123222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">375.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ir</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Au&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132112211213322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">488.85</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pt</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Hg&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;31121123222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">637.25</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Au</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Tl&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;111213322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">830.71</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Hg</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pb&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;123222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1082.89</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Tl</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Bi&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1411.63</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Pb</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Po&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">1840.17</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Bi</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;At&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1322113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">2398.8</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Po</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Rn&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;311311222113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">3127.02</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">At</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Fr&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113122113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">4076.31</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Rn</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ra&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;132113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">5313.79</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Fr</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Ac&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">6926.94</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ra</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Th&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1113&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">7581.9</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Ac</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;Pa&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;13&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">9883.6</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Th</span><span class=\"p\">]},</span> <span class=\"s1\">&#39;U&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">:</span> <span class=\"mf\">102.56</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decay&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Pa</span><span class=\"p\">]}}</span>\n</code></pre></div>\n\n<p>You can also print the periodic table:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">print_periodic_table</span><span class=\"p\">(</span><span class=\"n\">abundance_sum</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"o\">**</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">element</span>   <span class=\"n\">string</span>                                       <span class=\"n\">abundance</span>       <span class=\"n\">decay</span>\n<span class=\"n\">H</span>         <span class=\"mi\">22</span>                                           <span class=\"mf\">91790.383216</span>    <span class=\"p\">[</span><span class=\"n\">H</span><span class=\"p\">]</span>\n<span class=\"n\">He</span>        <span class=\"mi\">13112221133211322112211213322112</span>             <span class=\"mf\">3237.2968587</span>    <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Li</span><span class=\"p\">]</span>\n<span class=\"n\">Li</span>        <span class=\"mi\">312211322212221121123222112</span>                  <span class=\"mf\">4220.0665982</span>    <span class=\"p\">[</span><span class=\"n\">He</span><span class=\"p\">]</span>\n<span class=\"n\">Be</span>        <span class=\"mi\">111312211312113221133211322112211213322112</span>   <span class=\"mf\">2263.8860324</span>    <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Li</span><span class=\"p\">]</span>\n<span class=\"n\">B</span>         <span class=\"mi\">1321132122211322212221121123222112</span>           <span class=\"mf\">2951.1503716</span>    <span class=\"p\">[</span><span class=\"n\">Be</span><span class=\"p\">]</span>\n<span class=\"n\">C</span>         <span class=\"mi\">3113112211322112211213322112</span>                 <span class=\"mf\">3847.0525419</span>    <span class=\"p\">[</span><span class=\"n\">B</span><span class=\"p\">]</span>\n<span class=\"n\">N</span>         <span class=\"mi\">111312212221121123222112</span>                     <span class=\"mf\">5014.9302464</span>    <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span>\n<span class=\"n\">O</span>         <span class=\"mi\">132112211213322112</span>                           <span class=\"mf\">6537.349075</span>     <span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">]</span>\n<span class=\"n\">F</span>         <span class=\"mi\">31121123222112</span>                               <span class=\"mf\">8521.9396539</span>    <span class=\"p\">[</span><span class=\"n\">O</span><span class=\"p\">]</span>\n<span class=\"n\">Ne</span>        <span class=\"mi\">111213322112</span>                                 <span class=\"mf\">11109.0068209</span>   <span class=\"p\">[</span><span class=\"n\">F</span><span class=\"p\">]</span>\n<span class=\"n\">Na</span>        <span class=\"mi\">123222112</span>                                    <span class=\"mf\">14481.4487733</span>   <span class=\"p\">[</span><span class=\"n\">Ne</span><span class=\"p\">]</span>\n<span class=\"n\">Mg</span>        <span class=\"mi\">3113322112</span>                                   <span class=\"mf\">18850.4412275</span>   <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Na</span><span class=\"p\">]</span>\n<span class=\"n\">Al</span>        <span class=\"mi\">1113222112</span>                                   <span class=\"mf\">24573.0066954</span>   <span class=\"p\">[</span><span class=\"n\">Mg</span><span class=\"p\">]</span>\n<span class=\"n\">Si</span>        <span class=\"mi\">1322112</span>                                      <span class=\"mf\">32032.81296</span>     <span class=\"p\">[</span><span class=\"n\">Al</span><span class=\"p\">]</span>\n<span class=\"n\">P</span>         <span class=\"mi\">311311222112</span>                                 <span class=\"mf\">14895.8866582</span>   <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Si</span><span class=\"p\">]</span>\n<span class=\"n\">S</span>         <span class=\"mi\">1113122112</span>                                   <span class=\"mf\">19417.9392497</span>   <span class=\"p\">[</span><span class=\"n\">P</span><span class=\"p\">]</span>\n<span class=\"n\">Cl</span>        <span class=\"mi\">132112</span>                                       <span class=\"mf\">25312.7842174</span>   <span class=\"p\">[</span><span class=\"n\">S</span><span class=\"p\">]</span>\n<span class=\"n\">Ar</span>        <span class=\"mi\">3112</span>                                         <span class=\"mf\">32997.1701218</span>   <span class=\"p\">[</span><span class=\"n\">Cl</span><span class=\"p\">]</span>\n<span class=\"n\">K</span>         <span class=\"mi\">1112</span>                                         <span class=\"mf\">43014.3609132</span>   <span class=\"p\">[</span><span class=\"n\">Ar</span><span class=\"p\">]</span>\n<span class=\"n\">Ca</span>        <span class=\"mi\">12</span>                                           <span class=\"mf\">56072.5431285</span>   <span class=\"p\">[</span><span class=\"n\">K</span><span class=\"p\">]</span>\n<span class=\"n\">Sc</span>        <span class=\"mi\">3113112221133112</span>                             <span class=\"mf\">9302.0974443</span>    <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Ti</span>        <span class=\"mi\">11131221131112</span>                               <span class=\"mf\">12126.0027828</span>   <span class=\"p\">[</span><span class=\"n\">Sc</span><span class=\"p\">]</span>\n<span class=\"n\">V</span>         <span class=\"mi\">13211312</span>                                     <span class=\"mf\">15807.1815919</span>   <span class=\"p\">[</span><span class=\"n\">Ti</span><span class=\"p\">]</span>\n<span class=\"n\">Cr</span>        <span class=\"mi\">31132</span>                                        <span class=\"mf\">20605.8826107</span>   <span class=\"p\">[</span><span class=\"n\">V</span><span class=\"p\">]</span>\n<span class=\"n\">Mn</span>        <span class=\"mi\">111311222112</span>                                 <span class=\"mf\">26861.3601797</span>   <span class=\"p\">[</span><span class=\"n\">Cr</span><span class=\"p\">,</span> <span class=\"n\">Si</span><span class=\"p\">]</span>\n<span class=\"n\">Fe</span>        <span class=\"mi\">13122112</span>                                     <span class=\"mf\">35015.8585455</span>   <span class=\"p\">[</span><span class=\"n\">Mn</span><span class=\"p\">]</span>\n<span class=\"n\">Co</span>        <span class=\"mi\">32112</span>                                        <span class=\"mf\">45645.8772557</span>   <span class=\"p\">[</span><span class=\"n\">Fe</span><span class=\"p\">]</span>\n<span class=\"n\">Ni</span>        <span class=\"mi\">11133112</span>                                     <span class=\"mf\">13871.1241997</span>   <span class=\"p\">[</span><span class=\"n\">Zn</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Cu</span>        <span class=\"mi\">131112</span>                                       <span class=\"mf\">18082.0822027</span>   <span class=\"p\">[</span><span class=\"n\">Ni</span><span class=\"p\">]</span>\n<span class=\"n\">Zn</span>        <span class=\"mi\">312</span>                                          <span class=\"mf\">23571.3913363</span>   <span class=\"p\">[</span><span class=\"n\">Cu</span><span class=\"p\">]</span>\n<span class=\"n\">Ga</span>        <span class=\"mi\">13221133122211332</span>                            <span class=\"mf\">1447.8905642</span>    <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Ac</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Zn</span><span class=\"p\">]</span>\n<span class=\"n\">Ge</span>        <span class=\"mi\">31131122211311122113222</span>                      <span class=\"mf\">1887.4372276</span>    <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Ga</span><span class=\"p\">]</span>\n<span class=\"n\">As</span>        <span class=\"mi\">11131221131211322113322112</span>                   <span class=\"mf\">27.2462161</span>      <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Na</span><span class=\"p\">]</span>\n<span class=\"n\">Se</span>        <span class=\"mi\">13211321222113222112</span>                         <span class=\"mf\">35.5175479</span>      <span class=\"p\">[</span><span class=\"n\">As</span><span class=\"p\">]</span>\n<span class=\"n\">Br</span>        <span class=\"mi\">3113112211322112</span>                             <span class=\"mf\">46.2998682</span>      <span class=\"p\">[</span><span class=\"n\">Se</span><span class=\"p\">]</span>\n<span class=\"n\">Kr</span>        <span class=\"mi\">11131221222112</span>                               <span class=\"mf\">60.3554557</span>      <span class=\"p\">[</span><span class=\"n\">Br</span><span class=\"p\">]</span>\n<span class=\"n\">Rb</span>        <span class=\"mi\">1321122112</span>                                   <span class=\"mf\">78.6780001</span>      <span class=\"p\">[</span><span class=\"n\">Kr</span><span class=\"p\">]</span>\n<span class=\"n\">Sr</span>        <span class=\"mi\">3112112</span>                                      <span class=\"mf\">102.5628525</span>     <span class=\"p\">[</span><span class=\"n\">Rb</span><span class=\"p\">]</span>\n<span class=\"n\">Y</span>         <span class=\"mi\">1112133</span>                                      <span class=\"mf\">133.6986032</span>     <span class=\"p\">[</span><span class=\"n\">Sr</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"p\">]</span>\n<span class=\"n\">Zr</span>        <span class=\"mi\">12322211331222113112211</span>                      <span class=\"mf\">174.28646</span>       <span class=\"p\">[</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Tc</span><span class=\"p\">]</span>\n<span class=\"n\">Nb</span>        <span class=\"mi\">1113122113322113111221131221</span>                 <span class=\"mf\">227.1958675</span>     <span class=\"p\">[</span><span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Zr</span><span class=\"p\">]</span>\n<span class=\"n\">Mo</span>        <span class=\"mi\">13211322211312113211</span>                         <span class=\"mf\">296.1673685</span>     <span class=\"p\">[</span><span class=\"n\">Nb</span><span class=\"p\">]</span>\n<span class=\"n\">Tc</span>        <span class=\"mi\">311322113212221</span>                              <span class=\"mf\">386.0770494</span>     <span class=\"p\">[</span><span class=\"n\">Mo</span><span class=\"p\">]</span>\n<span class=\"n\">Ru</span>        <span class=\"mi\">132211331222113112211</span>                        <span class=\"mf\">328.9948058</span>     <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Tc</span><span class=\"p\">]</span>\n<span class=\"n\">Rh</span>        <span class=\"mi\">311311222113111221131221</span>                     <span class=\"mf\">428.8701504</span>     <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Ru</span><span class=\"p\">]</span>\n<span class=\"n\">Pd</span>        <span class=\"mi\">111312211312113211</span>                           <span class=\"mf\">559.0653795</span>     <span class=\"p\">[</span><span class=\"n\">Rh</span><span class=\"p\">]</span>\n<span class=\"n\">Ag</span>        <span class=\"mi\">132113212221</span>                                 <span class=\"mf\">728.7849206</span>     <span class=\"p\">[</span><span class=\"n\">Pd</span><span class=\"p\">]</span>\n<span class=\"n\">Cd</span>        <span class=\"mi\">3113112211</span>                                   <span class=\"mf\">950.0274565</span>     <span class=\"p\">[</span><span class=\"n\">Ag</span><span class=\"p\">]</span>\n<span class=\"n\">In</span>        <span class=\"mi\">11131221</span>                                     <span class=\"mf\">1238.4341972</span>    <span class=\"p\">[</span><span class=\"n\">Cd</span><span class=\"p\">]</span>\n<span class=\"n\">Sn</span>        <span class=\"mi\">13211</span>                                        <span class=\"mf\">1614.3946687</span>    <span class=\"p\">[</span><span class=\"n\">In</span><span class=\"p\">]</span>\n<span class=\"n\">Sb</span>        <span class=\"mi\">3112221</span>                                      <span class=\"mf\">2104.4881933</span>    <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Sn</span><span class=\"p\">]</span>\n<span class=\"n\">Te</span>        <span class=\"mi\">1322113312211</span>                                <span class=\"mf\">2743.3629717</span>    <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Sb</span><span class=\"p\">]</span>\n<span class=\"n\">I</span>         <span class=\"mi\">311311222113111221</span>                           <span class=\"mf\">3576.1856107</span>    <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Te</span><span class=\"p\">]</span>\n<span class=\"n\">Xe</span>        <span class=\"mi\">11131221131211</span>                               <span class=\"mf\">4661.8342719</span>    <span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span>\n<span class=\"n\">Cs</span>        <span class=\"mi\">13211321</span>                                     <span class=\"mf\">6077.0611889</span>    <span class=\"p\">[</span><span class=\"n\">Xe</span><span class=\"p\">]</span>\n<span class=\"n\">Ba</span>        <span class=\"mi\">311311</span>                                       <span class=\"mf\">7921.9188284</span>    <span class=\"p\">[</span><span class=\"n\">Cs</span><span class=\"p\">]</span>\n<span class=\"n\">La</span>        <span class=\"mi\">11131</span>                                        <span class=\"mf\">10326.8333118</span>   <span class=\"p\">[</span><span class=\"n\">Ba</span><span class=\"p\">]</span>\n<span class=\"n\">Ce</span>        <span class=\"mi\">1321133112</span>                                   <span class=\"mf\">13461.8251664</span>   <span class=\"p\">[</span><span class=\"n\">La</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Pr</span>        <span class=\"mi\">31131112</span>                                     <span class=\"mf\">17548.5292866</span>   <span class=\"p\">[</span><span class=\"n\">Ce</span><span class=\"p\">]</span>\n<span class=\"n\">Nd</span>        <span class=\"mi\">111312</span>                                       <span class=\"mf\">22875.863883</span>    <span class=\"p\">[</span><span class=\"n\">Pr</span><span class=\"p\">]</span>\n<span class=\"n\">Pm</span>        <span class=\"mi\">132</span>                                          <span class=\"mf\">29820.4561674</span>   <span class=\"p\">[</span><span class=\"n\">Nd</span><span class=\"p\">]</span>\n<span class=\"n\">Sm</span>        <span class=\"mi\">311332</span>                                       <span class=\"mf\">15408.1151815</span>   <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Zn</span><span class=\"p\">]</span>\n<span class=\"n\">Eu</span>        <span class=\"mi\">1113222</span>                                      <span class=\"mf\">20085.6687093</span>   <span class=\"p\">[</span><span class=\"n\">Sm</span><span class=\"p\">]</span>\n<span class=\"n\">Gd</span>        <span class=\"mi\">13221133112</span>                                  <span class=\"mf\">21662.9728211</span>   <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Tb</span>        <span class=\"mi\">3113112221131112</span>                             <span class=\"mf\">28239.3589492</span>   <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Gd</span><span class=\"p\">]</span>\n<span class=\"n\">Dy</span>        <span class=\"mi\">111312211312</span>                                 <span class=\"mf\">36812.1864183</span>   <span class=\"p\">[</span><span class=\"n\">Tb</span><span class=\"p\">]</span>\n<span class=\"n\">Ho</span>        <span class=\"mi\">1321132</span>                                      <span class=\"mf\">47987.5294384</span>   <span class=\"p\">[</span><span class=\"n\">Dy</span><span class=\"p\">]</span>\n<span class=\"n\">Er</span>        <span class=\"mi\">311311222</span>                                    <span class=\"mf\">1098.5955997</span>    <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Pm</span><span class=\"p\">]</span>\n<span class=\"n\">Tm</span>        <span class=\"mi\">11131221133112</span>                               <span class=\"mf\">1204.9083841</span>    <span class=\"p\">[</span><span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Yb</span>        <span class=\"mi\">1321131112</span>                                   <span class=\"mf\">1570.6911808</span>    <span class=\"p\">[</span><span class=\"n\">Tm</span><span class=\"p\">]</span>\n<span class=\"n\">Lu</span>        <span class=\"mi\">311312</span>                                       <span class=\"mf\">2047.51732</span>      <span class=\"p\">[</span><span class=\"n\">Yb</span><span class=\"p\">]</span>\n<span class=\"n\">Hf</span>        <span class=\"mi\">11132</span>                                        <span class=\"mf\">2669.0970363</span>    <span class=\"p\">[</span><span class=\"n\">Lu</span><span class=\"p\">]</span>\n<span class=\"n\">Ta</span>        <span class=\"mi\">13112221133211322112211213322113</span>             <span class=\"mf\">242.0773667</span>     <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">]</span>\n<span class=\"n\">W</span>         <span class=\"mi\">312211322212221121123222113</span>                  <span class=\"mf\">315.5665525</span>     <span class=\"p\">[</span><span class=\"n\">Ta</span><span class=\"p\">]</span>\n<span class=\"n\">Re</span>        <span class=\"mi\">111312211312113221133211322112211213322113</span>   <span class=\"mf\">169.2880181</span>     <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">]</span>\n<span class=\"n\">Os</span>        <span class=\"mi\">1321132122211322212221121123222113</span>           <span class=\"mf\">220.6800123</span>     <span class=\"p\">[</span><span class=\"n\">Re</span><span class=\"p\">]</span>\n<span class=\"n\">Ir</span>        <span class=\"mi\">3113112211322112211213322113</span>                 <span class=\"mf\">287.6734477</span>     <span class=\"p\">[</span><span class=\"n\">Os</span><span class=\"p\">]</span>\n<span class=\"n\">Pt</span>        <span class=\"mi\">111312212221121123222113</span>                     <span class=\"mf\">375.0045674</span>     <span class=\"p\">[</span><span class=\"n\">Ir</span><span class=\"p\">]</span>\n<span class=\"n\">Au</span>        <span class=\"mi\">132112211213322113</span>                           <span class=\"mf\">488.8474298</span>     <span class=\"p\">[</span><span class=\"n\">Pt</span><span class=\"p\">]</span>\n<span class=\"n\">Hg</span>        <span class=\"mi\">31121123222113</span>                               <span class=\"mf\">637.2503975</span>     <span class=\"p\">[</span><span class=\"n\">Au</span><span class=\"p\">]</span>\n<span class=\"n\">Tl</span>        <span class=\"mi\">111213322113</span>                                 <span class=\"mf\">830.7051329</span>     <span class=\"p\">[</span><span class=\"n\">Hg</span><span class=\"p\">]</span>\n<span class=\"n\">Pb</span>        <span class=\"mi\">123222113</span>                                    <span class=\"mf\">1082.8883286</span>    <span class=\"p\">[</span><span class=\"n\">Tl</span><span class=\"p\">]</span>\n<span class=\"n\">Bi</span>        <span class=\"mi\">3113322113</span>                                   <span class=\"mf\">1411.62861</span>      <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Pb</span><span class=\"p\">]</span>\n<span class=\"n\">Po</span>        <span class=\"mi\">1113222113</span>                                   <span class=\"mf\">1840.1669683</span>    <span class=\"p\">[</span><span class=\"n\">Bi</span><span class=\"p\">]</span>\n<span class=\"n\">At</span>        <span class=\"mi\">1322113</span>                                      <span class=\"mf\">2398.7998311</span>    <span class=\"p\">[</span><span class=\"n\">Po</span><span class=\"p\">]</span>\n<span class=\"n\">Rn</span>        <span class=\"mi\">311311222113</span>                                 <span class=\"mf\">3127.0209328</span>    <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">At</span><span class=\"p\">]</span>\n<span class=\"n\">Fr</span>        <span class=\"mi\">1113122113</span>                                   <span class=\"mf\">4076.3134078</span>    <span class=\"p\">[</span><span class=\"n\">Rn</span><span class=\"p\">]</span>\n<span class=\"n\">Ra</span>        <span class=\"mi\">132113</span>                                       <span class=\"mf\">5313.7894999</span>    <span class=\"p\">[</span><span class=\"n\">Fr</span><span class=\"p\">]</span>\n<span class=\"n\">Ac</span>        <span class=\"mi\">3113</span>                                         <span class=\"mf\">6926.9352045</span>    <span class=\"p\">[</span><span class=\"n\">Ra</span><span class=\"p\">]</span>\n<span class=\"n\">Th</span>        <span class=\"mi\">1113</span>                                         <span class=\"mf\">7581.9047124</span>    <span class=\"p\">[</span><span class=\"n\">Ac</span><span class=\"p\">]</span>\n<span class=\"n\">Pa</span>        <span class=\"mi\">13</span>                                           <span class=\"mf\">9883.5986391</span>    <span class=\"p\">[</span><span class=\"n\">Th</span><span class=\"p\">]</span>\n<span class=\"n\">U</span>         <span class=\"mi\">3</span>                                            <span class=\"mf\">102.5628525</span>     <span class=\"p\">[</span><span class=\"n\">Pa</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p><a name=\"std-binary-chem\"></a></p>\n\n<h2 id=\"binary-chemistry\">Binary chemistry</h2>\n\n<p>To determine the chemistry of standard binary look and say sequences (see <a href=\"#std-binary-las\">above</a>) we use a <code>BinaryChemistry</code> object:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_chem</span> <span class=\"o\">=</span> <span class=\"n\">BinaryChemistry</span><span class=\"p\">(</span><span class=\"n\">binary_ls</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_chem</span><span class=\"o\">.</span><span class=\"n\">generate_elements</span><span class=\"p\">(</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_chem</span><span class=\"o\">.</span><span class=\"n\">print_periodic_table</span><span class=\"p\">()</span>\n<span class=\"n\">element</span>   <span class=\"n\">string</span>   <span class=\"n\">abundance</span>    <span class=\"n\">decay</span>\n<span class=\"n\">E1</span>        <span class=\"mi\">1</span>        <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E4</span><span class=\"p\">]</span>\n<span class=\"n\">E2</span>        <span class=\"mi\">10</span>       <span class=\"mf\">21.6756572</span>   <span class=\"p\">[</span><span class=\"n\">E7</span><span class=\"p\">]</span>\n<span class=\"n\">E3</span>        <span class=\"mi\">100</span>      <span class=\"mf\">10.0915624</span>   <span class=\"p\">[</span><span class=\"n\">E8</span><span class=\"p\">]</span>\n<span class=\"n\">E4</span>        <span class=\"mi\">11</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E2</span><span class=\"p\">,</span> <span class=\"n\">E1</span><span class=\"p\">]</span>\n<span class=\"n\">E5</span>        <span class=\"mi\">110</span>      <span class=\"mf\">21.6756572</span>   <span class=\"p\">[</span><span class=\"n\">E2</span><span class=\"p\">,</span> <span class=\"n\">E5</span><span class=\"p\">]</span>\n<span class=\"n\">E6</span>        <span class=\"mi\">1100</span>     <span class=\"mf\">10.0915624</span>   <span class=\"p\">[</span><span class=\"n\">E2</span><span class=\"p\">,</span> <span class=\"n\">E6</span><span class=\"p\">]</span>\n<span class=\"n\">E7</span>        <span class=\"mi\">1110</span>     <span class=\"mf\">14.7899036</span>   <span class=\"p\">[</span><span class=\"n\">E9</span><span class=\"p\">]</span>\n<span class=\"n\">E8</span>        <span class=\"mi\">11100</span>    <span class=\"mf\">6.8857536</span>    <span class=\"p\">[</span><span class=\"n\">E10</span><span class=\"p\">]</span>\n<span class=\"n\">E9</span>        <span class=\"mi\">11110</span>    <span class=\"mf\">10.0915624</span>   <span class=\"p\">[</span><span class=\"n\">E3</span><span class=\"p\">,</span> <span class=\"n\">E5</span><span class=\"p\">]</span>\n<span class=\"n\">E10</span>       <span class=\"mi\">111100</span>   <span class=\"mf\">4.6983411</span>    <span class=\"p\">[</span><span class=\"n\">E3</span><span class=\"p\">,</span> <span class=\"n\">E6</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>With a <code>BinaryChemistry</code> object the terms of the binary look and say sequence are split so that the elements are of the form $1^m0^n$ with $m> 0$ and $n\\geq 0$. For example, the string <code>'110100101'</code> splits into the list of elements <code>['110', '100', '10', '1']</code>. A <code>BinaryChemistry</code> is valid whenever\nthe <em>say function</em> <code>say(n,d)</code> always returns a string starting with the character <code>1</code> and only returns a string ending with <code>1</code> when <code>d</code> is <code>1</code>. </p>\n\n<p>The decay matrix, characteristic polynomial, and dominant eigenvalue for this binary chemistry will be computed <a href=\"#std-binary-lin-alg\">below</a>.</p>\n\n<h2 id=\"balanced-quinary\">Balanced quinary</h2>\n\n<p>In general, given a <code>LookAndSay</code> object it is the user's responsibility to provide a compatible splitting function before exploring the corresponding <code>Chemistry</code>. In many cases, one can use a <a href=\"#split-func-factory\">Split Function Factory</a> object to help create the split function. To illustrate the use of a <code>SplitFuncFactory</code> object, consider look and say sequences arising from the <em>balanced quinary</em> number system. This is the base 5 number system using digits Q, T, 0, 1, 2 where Q=-2 and T=-1. </p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">look_and_say</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">balanced_quinary</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"s1\">&#39;&#39;&#39;Return the balanced quinary representation of n assuming 0&lt;n&lt;11&#39;&#39;&#39;</span>\n<span class=\"o\">...</span>     <span class=\"k\">assert</span> <span class=\"n\">n</span> <span class=\"o\">&lt;</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Can&#39;t say past 10.&quot;</span>\n<span class=\"o\">...</span>     <span class=\"n\">bq</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"s1\">&#39;2&#39;</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"s1\">&#39;1Q&#39;</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"s1\">&#39;1T&#39;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"s1\">&#39;10&#39;</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"s1\">&#39;11&#39;</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"s1\">&#39;12&#39;</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"s1\">&#39;2Q&#39;</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">:</span><span class=\"s1\">&#39;2T&#39;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"s1\">&#39;20&#39;</span><span class=\"p\">}</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">bq</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span>\n<span class=\"o\">...</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bq_las</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">(</span><span class=\"n\">balanced_quinary</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Use the fact that balance quinary representations of positive integers </span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># never start with 0, T, or Q to determine appropriate splitting conditions.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span> <span class=\"o\">=</span> <span class=\"n\">SplitFuncFactory</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">declare_split_after</span><span class=\"p\">(</span><span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;0&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span> <span class=\"o\">=</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">get_split</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bq_chem</span> <span class=\"o\">=</span> <span class=\"n\">Chemistry</span><span class=\"p\">(</span><span class=\"n\">bq_las</span><span class=\"p\">,</span> <span class=\"n\">split</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Generate all elements using any digit as a seed</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bq_chem</span><span class=\"o\">.</span><span class=\"n\">generate_elements</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"s1\">&#39;QT012&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bq_chem</span><span class=\"o\">.</span><span class=\"n\">print_periodic_table</span><span class=\"p\">()</span>\n<span class=\"n\">element</span>   <span class=\"n\">string</span>       <span class=\"n\">abundance</span>    <span class=\"n\">decay</span>\n<span class=\"n\">E1</span>        <span class=\"mi\">11121</span><span class=\"n\">Q</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E12</span><span class=\"p\">,</span> <span class=\"n\">E3</span><span class=\"p\">]</span>\n<span class=\"n\">E2</span>        <span class=\"mi\">111</span><span class=\"n\">Q</span>         <span class=\"mf\">13.9680582</span>   <span class=\"p\">[</span><span class=\"n\">E12</span><span class=\"p\">,</span> <span class=\"n\">E7</span><span class=\"p\">]</span>\n<span class=\"n\">E3</span>        <span class=\"mi\">112111</span><span class=\"n\">Q</span>      <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E14</span><span class=\"p\">,</span> <span class=\"n\">E7</span><span class=\"p\">]</span>\n<span class=\"n\">E4</span>        <span class=\"mi\">112211</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E16</span><span class=\"p\">]</span>\n<span class=\"n\">E5</span>        <span class=\"mi\">112221121</span><span class=\"n\">Q</span>   <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E15</span><span class=\"p\">,</span> <span class=\"n\">E19</span><span class=\"p\">]</span>\n<span class=\"n\">E6</span>        <span class=\"mi\">1122211</span><span class=\"n\">Q</span>     <span class=\"mf\">7.9595623</span>    <span class=\"p\">[</span><span class=\"n\">E15</span><span class=\"p\">,</span> <span class=\"n\">E20</span><span class=\"p\">]</span>\n<span class=\"n\">E7</span>        <span class=\"mi\">11</span><span class=\"n\">Q</span>          <span class=\"mf\">10.5441752</span>   <span class=\"p\">[</span><span class=\"n\">E15</span><span class=\"p\">]</span>\n<span class=\"n\">E8</span>        <span class=\"mi\">12111</span><span class=\"n\">Q</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E1</span><span class=\"p\">,</span> <span class=\"n\">E7</span><span class=\"p\">]</span>\n<span class=\"n\">E9</span>        <span class=\"mi\">1221</span>         <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E4</span><span class=\"p\">]</span>\n<span class=\"n\">E10</span>       <span class=\"mi\">122112111</span><span class=\"n\">Q</span>   <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E5</span><span class=\"p\">,</span> <span class=\"n\">E7</span><span class=\"p\">]</span>\n<span class=\"n\">E11</span>       <span class=\"mi\">12211</span><span class=\"n\">Q</span>       <span class=\"mf\">10.5441752</span>   <span class=\"p\">[</span><span class=\"n\">E6</span><span class=\"p\">]</span>\n<span class=\"n\">E12</span>       <span class=\"mi\">1</span><span class=\"n\">Q</span>           <span class=\"mf\">18.5037375</span>   <span class=\"p\">[</span><span class=\"n\">E2</span><span class=\"p\">]</span>\n<span class=\"n\">E13</span>       <span class=\"mi\">211</span>          <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E9</span><span class=\"p\">]</span>\n<span class=\"n\">E14</span>       <span class=\"mi\">21121</span><span class=\"n\">Q</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E10</span><span class=\"p\">]</span>\n<span class=\"n\">E15</span>       <span class=\"mi\">211</span><span class=\"n\">Q</span>         <span class=\"mf\">13.9680582</span>   <span class=\"p\">[</span><span class=\"n\">E11</span><span class=\"p\">]</span>\n<span class=\"n\">E16</span>       <span class=\"mi\">212221</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E8</span><span class=\"p\">,</span> <span class=\"n\">E13</span><span class=\"p\">]</span>\n<span class=\"n\">E17</span>       <span class=\"mi\">22110</span>        <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E22</span><span class=\"p\">]</span>\n<span class=\"n\">E18</span>       <span class=\"mi\">22112</span>        <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E23</span><span class=\"p\">]</span>\n<span class=\"n\">E19</span>       <span class=\"mi\">22112111</span><span class=\"n\">Q</span>    <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E24</span><span class=\"p\">,</span> <span class=\"n\">E7</span><span class=\"p\">]</span>\n<span class=\"n\">E20</span>       <span class=\"mi\">2211</span><span class=\"n\">Q</span>        <span class=\"mf\">13.9680582</span>   <span class=\"p\">[</span><span class=\"n\">E25</span><span class=\"p\">]</span>\n<span class=\"n\">E21</span>       <span class=\"mi\">2211</span><span class=\"n\">T</span>        <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E26</span><span class=\"p\">]</span>\n<span class=\"n\">E22</span>       <span class=\"mi\">222110</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E12</span><span class=\"p\">,</span> <span class=\"n\">E17</span><span class=\"p\">]</span>\n<span class=\"n\">E23</span>       <span class=\"mi\">222112</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E12</span><span class=\"p\">,</span> <span class=\"n\">E18</span><span class=\"p\">]</span>\n<span class=\"n\">E24</span>       <span class=\"mi\">2221121</span><span class=\"n\">Q</span>     <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E12</span><span class=\"p\">,</span> <span class=\"n\">E19</span><span class=\"p\">]</span>\n<span class=\"n\">E25</span>       <span class=\"mi\">22211</span><span class=\"n\">Q</span>       <span class=\"mf\">10.5441752</span>   <span class=\"p\">[</span><span class=\"n\">E12</span><span class=\"p\">,</span> <span class=\"n\">E20</span><span class=\"p\">]</span>\n<span class=\"n\">E26</span>       <span class=\"mi\">22211</span><span class=\"n\">T</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E12</span><span class=\"p\">,</span> <span class=\"n\">E21</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p><a name=\"std-binary-lin-alg\"></a></p>\n\n<h2 id=\"decay-matrices-characteristic-polynomials-and-dominant-eigenvalues\">Decay matrices, characteristic polynomials, and dominant eigenvalues</h2>\n\n<p>The <em>decay matrix</em> of a chemistry records the number of times every element appears in the decay of each element. The <code>Chemistry</code> method <code>get_decay_matrix()</code> returns the decay matrix as an array.\nFor example, the following shows the decay matrix for the standard binary chemistry from <a href=\"#std-binary-chem\">above</a>.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decay_matrix</span> <span class=\"o\">=</span> <span class=\"n\">binary_chem</span><span class=\"o\">.</span><span class=\"n\">get_decay_matrix</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">decay_matrix</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> \n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>The characteristic polynomial of the decay matrix (found using sympy) is obtained with the <code>get_char_poly()</code> method. </p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_chem</span><span class=\"o\">.</span><span class=\"n\">get_char_poly</span><span class=\"p\">()</span>\n<span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">3</span> <span class=\"o\">-</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>By default, the polynomial is returned as a factored expression, but there is an option to obtain the non-factored polynomial:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_chem</span><span class=\"o\">.</span><span class=\"n\">get_char_poly</span><span class=\"p\">(</span><span class=\"n\">factor</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">10</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">9</span> <span class=\"o\">+</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">7</span> <span class=\"o\">+</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">5</span> <span class=\"o\">-</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">4</span>\n</code></pre></div>\n\n<p>You can also get the characteristic polynomial formatted in latex:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">binary_chem</span><span class=\"o\">.</span><span class=\"n\">get_char_poly</span><span class=\"p\">(</span><span class=\"n\">latex</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n\\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span> \\<span class=\"n\">left</span><span class=\"p\">(</span>\\<span class=\"k\">lambda</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\\<span class=\"n\">right</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">}</span> \\<span class=\"n\">left</span><span class=\"p\">(</span>\\<span class=\"k\">lambda</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\\<span class=\"n\">right</span><span class=\"p\">)</span> \\<span class=\"n\">left</span><span class=\"p\">(</span>\\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">3</span><span class=\"p\">}</span> <span class=\"o\">-</span> \\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">}</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\\<span class=\"n\">right</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">binary_chem</span><span class=\"o\">.</span><span class=\"n\">get_char_poly</span><span class=\"p\">(</span><span class=\"n\">factor</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">latex</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n\\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">10</span><span class=\"p\">}</span> <span class=\"o\">-</span> <span class=\"mi\">2</span> \\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">9</span><span class=\"p\">}</span> <span class=\"o\">+</span> \\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">7</span><span class=\"p\">}</span> <span class=\"o\">+</span> \\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">5</span><span class=\"p\">}</span> <span class=\"o\">-</span> \\<span class=\"k\">lambda</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span>\n</code></pre></div>\n\n<p>The method <code>get_dom_eigenvalue()</code> returns the dominant (i.e. maximum real) eigenvalue of the decay matrix. This give the growth rate of the generic look and say sequence.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_chem</span><span class=\"o\">.</span><span class=\"n\">get_dom_eigenvalue</span><span class=\"p\">()</span>\n<span class=\"mf\">1.4655712318767662</span>\n</code></pre></div>\n\n<p>This method applied to the standard decimal case from <a href=\"#std-decimal-chem\">above</a> gives us Conway's constant:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">get_dom_eigenvalue</span><span class=\"p\">()</span>\n<span class=\"mf\">1.3035772690342982</span>\n</code></pre></div>\n\n<h2 id=\"reordering-the-elements\">Reordering the elements</h2>\n\n<p>The elements in a chemistry can be reordered using the <code>order_elements()</code> method. For example, we can reorder the elements in Conway's chemistry according to the elements' string lengths:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">order_elements</span><span class=\"p\">(</span><span class=\"n\">order_on</span><span class=\"o\">=</span><span class=\"s1\">&#39;string length&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">print_periodic_table</span><span class=\"p\">()</span>\n<span class=\"n\">element</span>   <span class=\"n\">string</span>                                       <span class=\"n\">abundance</span>   <span class=\"n\">decay</span>\n<span class=\"n\">U</span>         <span class=\"mi\">3</span>                                            <span class=\"mf\">0.0102563</span>   <span class=\"p\">[</span><span class=\"n\">Pa</span><span class=\"p\">]</span>\n<span class=\"n\">H</span>         <span class=\"mi\">22</span>                                           <span class=\"mf\">9.1790383</span>   <span class=\"p\">[</span><span class=\"n\">H</span><span class=\"p\">]</span>\n<span class=\"n\">Ca</span>        <span class=\"mi\">12</span>                                           <span class=\"mf\">5.6072543</span>   <span class=\"p\">[</span><span class=\"n\">K</span><span class=\"p\">]</span>\n<span class=\"n\">Pa</span>        <span class=\"mi\">13</span>                                           <span class=\"mf\">0.9883599</span>   <span class=\"p\">[</span><span class=\"n\">Th</span><span class=\"p\">]</span>\n<span class=\"n\">Zn</span>        <span class=\"mi\">312</span>                                          <span class=\"mf\">2.3571391</span>   <span class=\"p\">[</span><span class=\"n\">Cu</span><span class=\"p\">]</span>\n<span class=\"n\">Pm</span>        <span class=\"mi\">132</span>                                          <span class=\"mf\">2.9820456</span>   <span class=\"p\">[</span><span class=\"n\">Nd</span><span class=\"p\">]</span>\n<span class=\"n\">Ar</span>        <span class=\"mi\">3112</span>                                         <span class=\"mf\">3.299717</span>    <span class=\"p\">[</span><span class=\"n\">Cl</span><span class=\"p\">]</span>\n<span class=\"n\">K</span>         <span class=\"mi\">1112</span>                                         <span class=\"mf\">4.3014361</span>   <span class=\"p\">[</span><span class=\"n\">Ar</span><span class=\"p\">]</span>\n<span class=\"n\">Ac</span>        <span class=\"mi\">3113</span>                                         <span class=\"mf\">0.6926935</span>   <span class=\"p\">[</span><span class=\"n\">Ra</span><span class=\"p\">]</span>\n<span class=\"n\">Th</span>        <span class=\"mi\">1113</span>                                         <span class=\"mf\">0.7581905</span>   <span class=\"p\">[</span><span class=\"n\">Ac</span><span class=\"p\">]</span>\n<span class=\"n\">Cr</span>        <span class=\"mi\">31132</span>                                        <span class=\"mf\">2.0605883</span>   <span class=\"p\">[</span><span class=\"n\">V</span><span class=\"p\">]</span>\n<span class=\"n\">Co</span>        <span class=\"mi\">32112</span>                                        <span class=\"mf\">4.5645877</span>   <span class=\"p\">[</span><span class=\"n\">Fe</span><span class=\"p\">]</span>\n<span class=\"n\">Sn</span>        <span class=\"mi\">13211</span>                                        <span class=\"mf\">0.1614395</span>   <span class=\"p\">[</span><span class=\"n\">In</span><span class=\"p\">]</span>\n<span class=\"n\">La</span>        <span class=\"mi\">11131</span>                                        <span class=\"mf\">1.0326833</span>   <span class=\"p\">[</span><span class=\"n\">Ba</span><span class=\"p\">]</span>\n<span class=\"n\">Hf</span>        <span class=\"mi\">11132</span>                                        <span class=\"mf\">0.2669097</span>   <span class=\"p\">[</span><span class=\"n\">Lu</span><span class=\"p\">]</span>\n<span class=\"n\">Cl</span>        <span class=\"mi\">132112</span>                                       <span class=\"mf\">2.5312784</span>   <span class=\"p\">[</span><span class=\"n\">S</span><span class=\"p\">]</span>\n<span class=\"n\">Cu</span>        <span class=\"mi\">131112</span>                                       <span class=\"mf\">1.8082082</span>   <span class=\"p\">[</span><span class=\"n\">Ni</span><span class=\"p\">]</span>\n<span class=\"n\">Ba</span>        <span class=\"mi\">311311</span>                                       <span class=\"mf\">0.7921919</span>   <span class=\"p\">[</span><span class=\"n\">Cs</span><span class=\"p\">]</span>\n<span class=\"n\">Nd</span>        <span class=\"mi\">111312</span>                                       <span class=\"mf\">2.2875864</span>   <span class=\"p\">[</span><span class=\"n\">Pr</span><span class=\"p\">]</span>\n<span class=\"n\">Sm</span>        <span class=\"mi\">311332</span>                                       <span class=\"mf\">1.5408115</span>   <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Zn</span><span class=\"p\">]</span>\n<span class=\"n\">Lu</span>        <span class=\"mi\">311312</span>                                       <span class=\"mf\">0.2047517</span>   <span class=\"p\">[</span><span class=\"n\">Yb</span><span class=\"p\">]</span>\n<span class=\"n\">Ra</span>        <span class=\"mi\">132113</span>                                       <span class=\"mf\">0.5313789</span>   <span class=\"p\">[</span><span class=\"n\">Fr</span><span class=\"p\">]</span>\n<span class=\"n\">Si</span>        <span class=\"mi\">1322112</span>                                      <span class=\"mf\">3.2032813</span>   <span class=\"p\">[</span><span class=\"n\">Al</span><span class=\"p\">]</span>\n<span class=\"n\">Sr</span>        <span class=\"mi\">3112112</span>                                      <span class=\"mf\">0.0102563</span>   <span class=\"p\">[</span><span class=\"n\">Rb</span><span class=\"p\">]</span>\n<span class=\"n\">Y</span>         <span class=\"mi\">1112133</span>                                      <span class=\"mf\">0.0133699</span>   <span class=\"p\">[</span><span class=\"n\">Sr</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"p\">]</span>\n<span class=\"n\">Sb</span>        <span class=\"mi\">3112221</span>                                      <span class=\"mf\">0.2104488</span>   <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Sn</span><span class=\"p\">]</span>\n<span class=\"n\">Eu</span>        <span class=\"mi\">1113222</span>                                      <span class=\"mf\">2.0085669</span>   <span class=\"p\">[</span><span class=\"n\">Sm</span><span class=\"p\">]</span>\n<span class=\"n\">Ho</span>        <span class=\"mi\">1321132</span>                                      <span class=\"mf\">4.7987529</span>   <span class=\"p\">[</span><span class=\"n\">Dy</span><span class=\"p\">]</span>\n<span class=\"n\">At</span>        <span class=\"mi\">1322113</span>                                      <span class=\"mf\">0.23988</span>     <span class=\"p\">[</span><span class=\"n\">Po</span><span class=\"p\">]</span>\n<span class=\"n\">V</span>         <span class=\"mi\">13211312</span>                                     <span class=\"mf\">1.5807182</span>   <span class=\"p\">[</span><span class=\"n\">Ti</span><span class=\"p\">]</span>\n<span class=\"n\">Fe</span>        <span class=\"mi\">13122112</span>                                     <span class=\"mf\">3.5015859</span>   <span class=\"p\">[</span><span class=\"n\">Mn</span><span class=\"p\">]</span>\n<span class=\"n\">Ni</span>        <span class=\"mi\">11133112</span>                                     <span class=\"mf\">1.3871124</span>   <span class=\"p\">[</span><span class=\"n\">Zn</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">In</span>        <span class=\"mi\">11131221</span>                                     <span class=\"mf\">0.1238434</span>   <span class=\"p\">[</span><span class=\"n\">Cd</span><span class=\"p\">]</span>\n<span class=\"n\">Cs</span>        <span class=\"mi\">13211321</span>                                     <span class=\"mf\">0.6077061</span>   <span class=\"p\">[</span><span class=\"n\">Xe</span><span class=\"p\">]</span>\n<span class=\"n\">Pr</span>        <span class=\"mi\">31131112</span>                                     <span class=\"mf\">1.7548529</span>   <span class=\"p\">[</span><span class=\"n\">Ce</span><span class=\"p\">]</span>\n<span class=\"n\">Na</span>        <span class=\"mi\">123222112</span>                                    <span class=\"mf\">1.4481449</span>   <span class=\"p\">[</span><span class=\"n\">Ne</span><span class=\"p\">]</span>\n<span class=\"n\">Er</span>        <span class=\"mi\">311311222</span>                                    <span class=\"mf\">0.1098596</span>   <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Pm</span><span class=\"p\">]</span>\n<span class=\"n\">Pb</span>        <span class=\"mi\">123222113</span>                                    <span class=\"mf\">0.1082888</span>   <span class=\"p\">[</span><span class=\"n\">Tl</span><span class=\"p\">]</span>\n<span class=\"n\">Mg</span>        <span class=\"mi\">3113322112</span>                                   <span class=\"mf\">1.8850441</span>   <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Na</span><span class=\"p\">]</span>\n<span class=\"n\">Al</span>        <span class=\"mi\">1113222112</span>                                   <span class=\"mf\">2.4573007</span>   <span class=\"p\">[</span><span class=\"n\">Mg</span><span class=\"p\">]</span>\n<span class=\"n\">S</span>         <span class=\"mi\">1113122112</span>                                   <span class=\"mf\">1.9417939</span>   <span class=\"p\">[</span><span class=\"n\">P</span><span class=\"p\">]</span>\n<span class=\"n\">Rb</span>        <span class=\"mi\">1321122112</span>                                   <span class=\"mf\">0.0078678</span>   <span class=\"p\">[</span><span class=\"n\">Kr</span><span class=\"p\">]</span>\n<span class=\"n\">Cd</span>        <span class=\"mi\">3113112211</span>                                   <span class=\"mf\">0.0950027</span>   <span class=\"p\">[</span><span class=\"n\">Ag</span><span class=\"p\">]</span>\n<span class=\"n\">Ce</span>        <span class=\"mi\">1321133112</span>                                   <span class=\"mf\">1.3461825</span>   <span class=\"p\">[</span><span class=\"n\">La</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Yb</span>        <span class=\"mi\">1321131112</span>                                   <span class=\"mf\">0.1570691</span>   <span class=\"p\">[</span><span class=\"n\">Tm</span><span class=\"p\">]</span>\n<span class=\"n\">Bi</span>        <span class=\"mi\">3113322113</span>                                   <span class=\"mf\">0.1411629</span>   <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Pb</span><span class=\"p\">]</span>\n<span class=\"n\">Po</span>        <span class=\"mi\">1113222113</span>                                   <span class=\"mf\">0.1840167</span>   <span class=\"p\">[</span><span class=\"n\">Bi</span><span class=\"p\">]</span>\n<span class=\"n\">Fr</span>        <span class=\"mi\">1113122113</span>                                   <span class=\"mf\">0.4076313</span>   <span class=\"p\">[</span><span class=\"n\">Rn</span><span class=\"p\">]</span>\n<span class=\"n\">Gd</span>        <span class=\"mi\">13221133112</span>                                  <span class=\"mf\">2.1662973</span>   <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Ne</span>        <span class=\"mi\">111213322112</span>                                 <span class=\"mf\">1.1109007</span>   <span class=\"p\">[</span><span class=\"n\">F</span><span class=\"p\">]</span>\n<span class=\"n\">P</span>         <span class=\"mi\">311311222112</span>                                 <span class=\"mf\">1.4895887</span>   <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Si</span><span class=\"p\">]</span>\n<span class=\"n\">Mn</span>        <span class=\"mi\">111311222112</span>                                 <span class=\"mf\">2.686136</span>    <span class=\"p\">[</span><span class=\"n\">Cr</span><span class=\"p\">,</span> <span class=\"n\">Si</span><span class=\"p\">]</span>\n<span class=\"n\">Ag</span>        <span class=\"mi\">132113212221</span>                                 <span class=\"mf\">0.0728785</span>   <span class=\"p\">[</span><span class=\"n\">Pd</span><span class=\"p\">]</span>\n<span class=\"n\">Dy</span>        <span class=\"mi\">111312211312</span>                                 <span class=\"mf\">3.6812186</span>   <span class=\"p\">[</span><span class=\"n\">Tb</span><span class=\"p\">]</span>\n<span class=\"n\">Tl</span>        <span class=\"mi\">111213322113</span>                                 <span class=\"mf\">0.0830705</span>   <span class=\"p\">[</span><span class=\"n\">Hg</span><span class=\"p\">]</span>\n<span class=\"n\">Rn</span>        <span class=\"mi\">311311222113</span>                                 <span class=\"mf\">0.3127021</span>   <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">At</span><span class=\"p\">]</span>\n<span class=\"n\">Te</span>        <span class=\"mi\">1322113312211</span>                                <span class=\"mf\">0.2743363</span>   <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Sb</span><span class=\"p\">]</span>\n<span class=\"n\">F</span>         <span class=\"mi\">31121123222112</span>                               <span class=\"mf\">0.852194</span>    <span class=\"p\">[</span><span class=\"n\">O</span><span class=\"p\">]</span>\n<span class=\"n\">Ti</span>        <span class=\"mi\">11131221131112</span>                               <span class=\"mf\">1.2126003</span>   <span class=\"p\">[</span><span class=\"n\">Sc</span><span class=\"p\">]</span>\n<span class=\"n\">Kr</span>        <span class=\"mi\">11131221222112</span>                               <span class=\"mf\">0.0060355</span>   <span class=\"p\">[</span><span class=\"n\">Br</span><span class=\"p\">]</span>\n<span class=\"n\">Xe</span>        <span class=\"mi\">11131221131211</span>                               <span class=\"mf\">0.4661834</span>   <span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span>\n<span class=\"n\">Tm</span>        <span class=\"mi\">11131221133112</span>                               <span class=\"mf\">0.1204908</span>   <span class=\"p\">[</span><span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Hg</span>        <span class=\"mi\">31121123222113</span>                               <span class=\"mf\">0.063725</span>    <span class=\"p\">[</span><span class=\"n\">Au</span><span class=\"p\">]</span>\n<span class=\"n\">Tc</span>        <span class=\"mi\">311322113212221</span>                              <span class=\"mf\">0.0386077</span>   <span class=\"p\">[</span><span class=\"n\">Mo</span><span class=\"p\">]</span>\n<span class=\"n\">Sc</span>        <span class=\"mi\">3113112221133112</span>                             <span class=\"mf\">0.9302097</span>   <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Br</span>        <span class=\"mi\">3113112211322112</span>                             <span class=\"mf\">0.00463</span>     <span class=\"p\">[</span><span class=\"n\">Se</span><span class=\"p\">]</span>\n<span class=\"n\">Tb</span>        <span class=\"mi\">3113112221131112</span>                             <span class=\"mf\">2.8239359</span>   <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Gd</span><span class=\"p\">]</span>\n<span class=\"n\">Ga</span>        <span class=\"mi\">13221133122211332</span>                            <span class=\"mf\">0.1447891</span>   <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Ac</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Zn</span><span class=\"p\">]</span>\n<span class=\"n\">O</span>         <span class=\"mi\">132112211213322112</span>                           <span class=\"mf\">0.6537349</span>   <span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">]</span>\n<span class=\"n\">Pd</span>        <span class=\"mi\">111312211312113211</span>                           <span class=\"mf\">0.0559065</span>   <span class=\"p\">[</span><span class=\"n\">Rh</span><span class=\"p\">]</span>\n<span class=\"n\">I</span>         <span class=\"mi\">311311222113111221</span>                           <span class=\"mf\">0.3576186</span>   <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Te</span><span class=\"p\">]</span>\n<span class=\"n\">Au</span>        <span class=\"mi\">132112211213322113</span>                           <span class=\"mf\">0.0488847</span>   <span class=\"p\">[</span><span class=\"n\">Pt</span><span class=\"p\">]</span>\n<span class=\"n\">Se</span>        <span class=\"mi\">13211321222113222112</span>                         <span class=\"mf\">0.0035518</span>   <span class=\"p\">[</span><span class=\"n\">As</span><span class=\"p\">]</span>\n<span class=\"n\">Mo</span>        <span class=\"mi\">13211322211312113211</span>                         <span class=\"mf\">0.0296167</span>   <span class=\"p\">[</span><span class=\"n\">Nb</span><span class=\"p\">]</span>\n<span class=\"n\">Ru</span>        <span class=\"mi\">132211331222113112211</span>                        <span class=\"mf\">0.0328995</span>   <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Tc</span><span class=\"p\">]</span>\n<span class=\"n\">Ge</span>        <span class=\"mi\">31131122211311122113222</span>                      <span class=\"mf\">0.1887437</span>   <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Ga</span><span class=\"p\">]</span>\n<span class=\"n\">Zr</span>        <span class=\"mi\">12322211331222113112211</span>                      <span class=\"mf\">0.0174286</span>   <span class=\"p\">[</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Tc</span><span class=\"p\">]</span>\n<span class=\"n\">N</span>         <span class=\"mi\">111312212221121123222112</span>                     <span class=\"mf\">0.501493</span>    <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span>\n<span class=\"n\">Rh</span>        <span class=\"mi\">311311222113111221131221</span>                     <span class=\"mf\">0.042887</span>    <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Ru</span><span class=\"p\">]</span>\n<span class=\"n\">Pt</span>        <span class=\"mi\">111312212221121123222113</span>                     <span class=\"mf\">0.0375005</span>   <span class=\"p\">[</span><span class=\"n\">Ir</span><span class=\"p\">]</span>\n<span class=\"n\">As</span>        <span class=\"mi\">11131221131211322113322112</span>                   <span class=\"mf\">0.0027246</span>   <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Na</span><span class=\"p\">]</span>\n<span class=\"n\">Li</span>        <span class=\"mi\">312211322212221121123222112</span>                  <span class=\"mf\">0.4220067</span>   <span class=\"p\">[</span><span class=\"n\">He</span><span class=\"p\">]</span>\n<span class=\"n\">W</span>         <span class=\"mi\">312211322212221121123222113</span>                  <span class=\"mf\">0.0315567</span>   <span class=\"p\">[</span><span class=\"n\">Ta</span><span class=\"p\">]</span>\n<span class=\"n\">C</span>         <span class=\"mi\">3113112211322112211213322112</span>                 <span class=\"mf\">0.3847053</span>   <span class=\"p\">[</span><span class=\"n\">B</span><span class=\"p\">]</span>\n<span class=\"n\">Nb</span>        <span class=\"mi\">1113122113322113111221131221</span>                 <span class=\"mf\">0.0227196</span>   <span class=\"p\">[</span><span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Zr</span><span class=\"p\">]</span>\n<span class=\"n\">Ir</span>        <span class=\"mi\">3113112211322112211213322113</span>                 <span class=\"mf\">0.0287673</span>   <span class=\"p\">[</span><span class=\"n\">Os</span><span class=\"p\">]</span>\n<span class=\"n\">He</span>        <span class=\"mi\">13112221133211322112211213322112</span>             <span class=\"mf\">0.3237297</span>   <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Li</span><span class=\"p\">]</span>\n<span class=\"n\">Ta</span>        <span class=\"mi\">13112221133211322112211213322113</span>             <span class=\"mf\">0.0242077</span>   <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">]</span>\n<span class=\"n\">B</span>         <span class=\"mi\">1321132122211322212221121123222112</span>           <span class=\"mf\">0.295115</span>    <span class=\"p\">[</span><span class=\"n\">Be</span><span class=\"p\">]</span>\n<span class=\"n\">Os</span>        <span class=\"mi\">1321132122211322212221121123222113</span>           <span class=\"mf\">0.022068</span>    <span class=\"p\">[</span><span class=\"n\">Re</span><span class=\"p\">]</span>\n<span class=\"n\">Be</span>        <span class=\"mi\">111312211312113221133211322112211213322112</span>   <span class=\"mf\">0.2263886</span>   <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Li</span><span class=\"p\">]</span>\n<span class=\"n\">Re</span>        <span class=\"mi\">111312211312113221133211322112211213322113</span>   <span class=\"mf\">0.0169288</span>   <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>In the following example, we reorder the elements in the standard binary chemistry from <a href=\"#std-binary-chem\">above</a> according to the abundances:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_chem</span><span class=\"o\">.</span><span class=\"n\">order_elements</span><span class=\"p\">(</span><span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_chem</span><span class=\"o\">.</span><span class=\"n\">print_periodic_table</span><span class=\"p\">()</span>\n<span class=\"n\">element</span>   <span class=\"n\">string</span>   <span class=\"n\">abundance</span>    <span class=\"n\">decay</span>\n<span class=\"n\">E1</span>        <span class=\"mi\">110</span>      <span class=\"mf\">21.6756572</span>   <span class=\"p\">[</span><span class=\"n\">E2</span><span class=\"p\">,</span> <span class=\"n\">E1</span><span class=\"p\">]</span>\n<span class=\"n\">E2</span>        <span class=\"mi\">10</span>       <span class=\"mf\">21.6756572</span>   <span class=\"p\">[</span><span class=\"n\">E3</span><span class=\"p\">]</span>\n<span class=\"n\">E3</span>        <span class=\"mi\">1110</span>     <span class=\"mf\">14.7899036</span>   <span class=\"p\">[</span><span class=\"n\">E4</span><span class=\"p\">]</span>\n<span class=\"n\">E4</span>        <span class=\"mi\">11110</span>    <span class=\"mf\">10.0915624</span>   <span class=\"p\">[</span><span class=\"n\">E6</span><span class=\"p\">,</span> <span class=\"n\">E1</span><span class=\"p\">]</span>\n<span class=\"n\">E5</span>        <span class=\"mi\">1100</span>     <span class=\"mf\">10.0915624</span>   <span class=\"p\">[</span><span class=\"n\">E2</span><span class=\"p\">,</span> <span class=\"n\">E5</span><span class=\"p\">]</span>\n<span class=\"n\">E6</span>        <span class=\"mi\">100</span>      <span class=\"mf\">10.0915624</span>   <span class=\"p\">[</span><span class=\"n\">E7</span><span class=\"p\">]</span>\n<span class=\"n\">E7</span>        <span class=\"mi\">11100</span>    <span class=\"mf\">6.8857536</span>    <span class=\"p\">[</span><span class=\"n\">E8</span><span class=\"p\">]</span>\n<span class=\"n\">E8</span>        <span class=\"mi\">111100</span>   <span class=\"mf\">4.6983411</span>    <span class=\"p\">[</span><span class=\"n\">E6</span><span class=\"p\">,</span> <span class=\"n\">E5</span><span class=\"p\">]</span>\n<span class=\"n\">E9</span>        <span class=\"mi\">11</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E2</span><span class=\"p\">,</span> <span class=\"n\">E10</span><span class=\"p\">]</span>\n<span class=\"n\">E10</span>       <span class=\"mi\">1</span>        <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E9</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>The options for the parameter <code>order_on</code> are the following:</p>\n\n<table>\n<thead>\n<tr>\n  <th>order_on</th>\n  <th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>'abundance'</td>\n  <td>Orders elements from highest abundance to lowest.</td>\n</tr>\n<tr>\n  <td>'string'</td>\n  <td>Orders elements according to the lexicographic order of their strings.</td>\n</tr>\n<tr>\n  <td>'string length'</td>\n  <td>Orders elements according to the lengths of their strings from shortest to longest.</td>\n</tr>\n<tr>\n  <td>'name'</td>\n  <td>Orders elements alphabetically according to their names.</td>\n</tr>\n<tr>\n  <td>'key'</td>\n  <td>Orders elements according to the function specified by the parameter <code>key</code> as in the python function <code>sorted()</code>.</td>\n</tr>\n</tbody>\n</table>\n\n<p>You can reverse the ordering above by passing the extra parameter <code>reverse = True</code>.</p>\n\n<p>By default this method will automatically rename the elements according to their new order.\nThis will not happen if the elements are named via Conway or if the parameter <code>rename = False</code> is passed.</p>\n\n<h1 id=\"cosmology\">Cosmology</h1>\n\n<h2 id=\"proof-of-conways-cosmology-theorem\">Proof of Conway's Cosmology Theorem</h2>\n\n<p>The <code>proof()</code> method in the <code>Cosmology</code> class uses a backtracking algorithm to prove Conway's Cosmological Theorem. If we pass the parameter <code>day = N</code> the algorithm searches for all strings that might appear as chunks of an N-day old element. The search starts with strings of length 1 (i.e. the digits) and then searches for strings of length 2, then length 3, etc. For each string found in the search, the algorithm repeatedly applies the say-what-you-see operation until the result is a compound of common elements. The algorithm terminates when for some positive integer L, there are no strings of length L that can appear as chunks of an N-day old element, and all strings of length less than L which might appear as a chunk of an N-day old element are shown to eventually decay into a compound of common elements.</p>\n\n<p>Running the program prints a few details about the search. In particular, an upper bound for the age of an exotic (i.e. not common) element is displayed.  </p>\n\n<p>The default parameter is <code>day = 9</code>, which results in a proof of the Cosmological Theorem that gives an upper bound of 27 for the age of an exotic element. </p>\n\n<p>The proof is essentially the same as that of <a href=\"https://www.ams.org/journals/era/1997-03-11/S1079-6762-97-00026-7/S1079-6762-97-00026-7.pdf\">Zeilberger</a>. The implementation is similar to that of <a href=\"https://oeis.org/A005150/a005150_4.pdf\">Litherland's proof1</a>.</p>\n\n<h1 id=\"more-examples\">More examples</h1>\n\n<h2 id=\"conways-chemistry-with-transuranic-elements\">Conway's chemistry with transuranic elements</h2>\n\n<p>In the following example, the seeds used to generate elements \nguarantee that a few transuranic elements will appear. Also, we print the \nperiodic table using Conway's convention that abundances are given in \natoms per million.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ls</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span> <span class=\"o\">=</span> <span class=\"n\">Chemistry</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">generate_elements</span><span class=\"p\">(</span><span class=\"s1\">&#39;11111&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;78&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chem</span><span class=\"o\">.</span><span class=\"n\">print_periodic_table</span><span class=\"p\">(</span><span class=\"n\">abundance_sum</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"o\">**</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">element</span>   <span class=\"n\">string</span>                                       <span class=\"n\">abundance</span>       <span class=\"n\">decay</span>\n<span class=\"n\">H</span>         <span class=\"mi\">22</span>                                           <span class=\"mf\">91790.383216</span>    <span class=\"p\">[</span><span class=\"n\">H</span><span class=\"p\">]</span>\n<span class=\"n\">He</span>        <span class=\"mi\">13112221133211322112211213322112</span>             <span class=\"mf\">3237.2968587</span>    <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Li</span><span class=\"p\">]</span>\n<span class=\"n\">Li</span>        <span class=\"mi\">312211322212221121123222112</span>                  <span class=\"mf\">4220.0665982</span>    <span class=\"p\">[</span><span class=\"n\">He</span><span class=\"p\">]</span>\n<span class=\"n\">Be</span>        <span class=\"mi\">111312211312113221133211322112211213322112</span>   <span class=\"mf\">2263.8860324</span>    <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Li</span><span class=\"p\">]</span>\n<span class=\"n\">B</span>         <span class=\"mi\">1321132122211322212221121123222112</span>           <span class=\"mf\">2951.1503716</span>    <span class=\"p\">[</span><span class=\"n\">Be</span><span class=\"p\">]</span>\n<span class=\"n\">C</span>         <span class=\"mi\">3113112211322112211213322112</span>                 <span class=\"mf\">3847.0525419</span>    <span class=\"p\">[</span><span class=\"n\">B</span><span class=\"p\">]</span>\n<span class=\"n\">N</span>         <span class=\"mi\">111312212221121123222112</span>                     <span class=\"mf\">5014.9302464</span>    <span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">]</span>\n<span class=\"n\">O</span>         <span class=\"mi\">132112211213322112</span>                           <span class=\"mf\">6537.349075</span>     <span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">]</span>\n<span class=\"n\">F</span>         <span class=\"mi\">31121123222112</span>                               <span class=\"mf\">8521.9396539</span>    <span class=\"p\">[</span><span class=\"n\">O</span><span class=\"p\">]</span>\n<span class=\"n\">Ne</span>        <span class=\"mi\">111213322112</span>                                 <span class=\"mf\">11109.0068209</span>   <span class=\"p\">[</span><span class=\"n\">F</span><span class=\"p\">]</span>\n<span class=\"n\">Na</span>        <span class=\"mi\">123222112</span>                                    <span class=\"mf\">14481.4487733</span>   <span class=\"p\">[</span><span class=\"n\">Ne</span><span class=\"p\">]</span>\n<span class=\"n\">Mg</span>        <span class=\"mi\">3113322112</span>                                   <span class=\"mf\">18850.4412275</span>   <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Na</span><span class=\"p\">]</span>\n<span class=\"n\">Al</span>        <span class=\"mi\">1113222112</span>                                   <span class=\"mf\">24573.0066954</span>   <span class=\"p\">[</span><span class=\"n\">Mg</span><span class=\"p\">]</span>\n<span class=\"n\">Si</span>        <span class=\"mi\">1322112</span>                                      <span class=\"mf\">32032.81296</span>     <span class=\"p\">[</span><span class=\"n\">Al</span><span class=\"p\">]</span>\n<span class=\"n\">P</span>         <span class=\"mi\">311311222112</span>                                 <span class=\"mf\">14895.8866582</span>   <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Si</span><span class=\"p\">]</span>\n<span class=\"n\">S</span>         <span class=\"mi\">1113122112</span>                                   <span class=\"mf\">19417.9392497</span>   <span class=\"p\">[</span><span class=\"n\">P</span><span class=\"p\">]</span>\n<span class=\"n\">Cl</span>        <span class=\"mi\">132112</span>                                       <span class=\"mf\">25312.7842174</span>   <span class=\"p\">[</span><span class=\"n\">S</span><span class=\"p\">]</span>\n<span class=\"n\">Ar</span>        <span class=\"mi\">3112</span>                                         <span class=\"mf\">32997.1701218</span>   <span class=\"p\">[</span><span class=\"n\">Cl</span><span class=\"p\">]</span>\n<span class=\"n\">K</span>         <span class=\"mi\">1112</span>                                         <span class=\"mf\">43014.3609132</span>   <span class=\"p\">[</span><span class=\"n\">Ar</span><span class=\"p\">]</span>\n<span class=\"n\">Ca</span>        <span class=\"mi\">12</span>                                           <span class=\"mf\">56072.5431285</span>   <span class=\"p\">[</span><span class=\"n\">K</span><span class=\"p\">]</span>\n<span class=\"n\">Sc</span>        <span class=\"mi\">3113112221133112</span>                             <span class=\"mf\">9302.0974443</span>    <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Ti</span>        <span class=\"mi\">11131221131112</span>                               <span class=\"mf\">12126.0027828</span>   <span class=\"p\">[</span><span class=\"n\">Sc</span><span class=\"p\">]</span>\n<span class=\"n\">V</span>         <span class=\"mi\">13211312</span>                                     <span class=\"mf\">15807.1815919</span>   <span class=\"p\">[</span><span class=\"n\">Ti</span><span class=\"p\">]</span>\n<span class=\"n\">Cr</span>        <span class=\"mi\">31132</span>                                        <span class=\"mf\">20605.8826107</span>   <span class=\"p\">[</span><span class=\"n\">V</span><span class=\"p\">]</span>\n<span class=\"n\">Mn</span>        <span class=\"mi\">111311222112</span>                                 <span class=\"mf\">26861.3601797</span>   <span class=\"p\">[</span><span class=\"n\">Cr</span><span class=\"p\">,</span> <span class=\"n\">Si</span><span class=\"p\">]</span>\n<span class=\"n\">Fe</span>        <span class=\"mi\">13122112</span>                                     <span class=\"mf\">35015.8585455</span>   <span class=\"p\">[</span><span class=\"n\">Mn</span><span class=\"p\">]</span>\n<span class=\"n\">Co</span>        <span class=\"mi\">32112</span>                                        <span class=\"mf\">45645.8772557</span>   <span class=\"p\">[</span><span class=\"n\">Fe</span><span class=\"p\">]</span>\n<span class=\"n\">Ni</span>        <span class=\"mi\">11133112</span>                                     <span class=\"mf\">13871.1241997</span>   <span class=\"p\">[</span><span class=\"n\">Zn</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Cu</span>        <span class=\"mi\">131112</span>                                       <span class=\"mf\">18082.0822027</span>   <span class=\"p\">[</span><span class=\"n\">Ni</span><span class=\"p\">]</span>\n<span class=\"n\">Zn</span>        <span class=\"mi\">312</span>                                          <span class=\"mf\">23571.3913363</span>   <span class=\"p\">[</span><span class=\"n\">Cu</span><span class=\"p\">]</span>\n<span class=\"n\">Ga</span>        <span class=\"mi\">13221133122211332</span>                            <span class=\"mf\">1447.8905642</span>    <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Ac</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Zn</span><span class=\"p\">]</span>\n<span class=\"n\">Ge</span>        <span class=\"mi\">31131122211311122113222</span>                      <span class=\"mf\">1887.4372276</span>    <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Ga</span><span class=\"p\">]</span>\n<span class=\"n\">As</span>        <span class=\"mi\">11131221131211322113322112</span>                   <span class=\"mf\">27.2462161</span>      <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Na</span><span class=\"p\">]</span>\n<span class=\"n\">Se</span>        <span class=\"mi\">13211321222113222112</span>                         <span class=\"mf\">35.5175479</span>      <span class=\"p\">[</span><span class=\"n\">As</span><span class=\"p\">]</span>\n<span class=\"n\">Br</span>        <span class=\"mi\">3113112211322112</span>                             <span class=\"mf\">46.2998682</span>      <span class=\"p\">[</span><span class=\"n\">Se</span><span class=\"p\">]</span>\n<span class=\"n\">Kr</span>        <span class=\"mi\">11131221222112</span>                               <span class=\"mf\">60.3554557</span>      <span class=\"p\">[</span><span class=\"n\">Br</span><span class=\"p\">]</span>\n<span class=\"n\">Rb</span>        <span class=\"mi\">1321122112</span>                                   <span class=\"mf\">78.6780001</span>      <span class=\"p\">[</span><span class=\"n\">Kr</span><span class=\"p\">]</span>\n<span class=\"n\">Sr</span>        <span class=\"mi\">3112112</span>                                      <span class=\"mf\">102.5628525</span>     <span class=\"p\">[</span><span class=\"n\">Rb</span><span class=\"p\">]</span>\n<span class=\"n\">Y</span>         <span class=\"mi\">1112133</span>                                      <span class=\"mf\">133.6986032</span>     <span class=\"p\">[</span><span class=\"n\">Sr</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"p\">]</span>\n<span class=\"n\">Zr</span>        <span class=\"mi\">12322211331222113112211</span>                      <span class=\"mf\">174.28646</span>       <span class=\"p\">[</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Tc</span><span class=\"p\">]</span>\n<span class=\"n\">Nb</span>        <span class=\"mi\">1113122113322113111221131221</span>                 <span class=\"mf\">227.1958675</span>     <span class=\"p\">[</span><span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Zr</span><span class=\"p\">]</span>\n<span class=\"n\">Mo</span>        <span class=\"mi\">13211322211312113211</span>                         <span class=\"mf\">296.1673685</span>     <span class=\"p\">[</span><span class=\"n\">Nb</span><span class=\"p\">]</span>\n<span class=\"n\">Tc</span>        <span class=\"mi\">311322113212221</span>                              <span class=\"mf\">386.0770494</span>     <span class=\"p\">[</span><span class=\"n\">Mo</span><span class=\"p\">]</span>\n<span class=\"n\">Ru</span>        <span class=\"mi\">132211331222113112211</span>                        <span class=\"mf\">328.9948058</span>     <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Tc</span><span class=\"p\">]</span>\n<span class=\"n\">Rh</span>        <span class=\"mi\">311311222113111221131221</span>                     <span class=\"mf\">428.8701504</span>     <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Ru</span><span class=\"p\">]</span>\n<span class=\"n\">Pd</span>        <span class=\"mi\">111312211312113211</span>                           <span class=\"mf\">559.0653795</span>     <span class=\"p\">[</span><span class=\"n\">Rh</span><span class=\"p\">]</span>\n<span class=\"n\">Ag</span>        <span class=\"mi\">132113212221</span>                                 <span class=\"mf\">728.7849206</span>     <span class=\"p\">[</span><span class=\"n\">Pd</span><span class=\"p\">]</span>\n<span class=\"n\">Cd</span>        <span class=\"mi\">3113112211</span>                                   <span class=\"mf\">950.0274565</span>     <span class=\"p\">[</span><span class=\"n\">Ag</span><span class=\"p\">]</span>\n<span class=\"n\">In</span>        <span class=\"mi\">11131221</span>                                     <span class=\"mf\">1238.4341972</span>    <span class=\"p\">[</span><span class=\"n\">Cd</span><span class=\"p\">]</span>\n<span class=\"n\">Sn</span>        <span class=\"mi\">13211</span>                                        <span class=\"mf\">1614.3946687</span>    <span class=\"p\">[</span><span class=\"n\">In</span><span class=\"p\">]</span>\n<span class=\"n\">Sb</span>        <span class=\"mi\">3112221</span>                                      <span class=\"mf\">2104.4881933</span>    <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Sn</span><span class=\"p\">]</span>\n<span class=\"n\">Te</span>        <span class=\"mi\">1322113312211</span>                                <span class=\"mf\">2743.3629717</span>    <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Sb</span><span class=\"p\">]</span>\n<span class=\"n\">I</span>         <span class=\"mi\">311311222113111221</span>                           <span class=\"mf\">3576.1856107</span>    <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Te</span><span class=\"p\">]</span>\n<span class=\"n\">Xe</span>        <span class=\"mi\">11131221131211</span>                               <span class=\"mf\">4661.8342719</span>    <span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span>\n<span class=\"n\">Cs</span>        <span class=\"mi\">13211321</span>                                     <span class=\"mf\">6077.0611889</span>    <span class=\"p\">[</span><span class=\"n\">Xe</span><span class=\"p\">]</span>\n<span class=\"n\">Ba</span>        <span class=\"mi\">311311</span>                                       <span class=\"mf\">7921.9188284</span>    <span class=\"p\">[</span><span class=\"n\">Cs</span><span class=\"p\">]</span>\n<span class=\"n\">La</span>        <span class=\"mi\">11131</span>                                        <span class=\"mf\">10326.8333118</span>   <span class=\"p\">[</span><span class=\"n\">Ba</span><span class=\"p\">]</span>\n<span class=\"n\">Ce</span>        <span class=\"mi\">1321133112</span>                                   <span class=\"mf\">13461.8251664</span>   <span class=\"p\">[</span><span class=\"n\">La</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Pr</span>        <span class=\"mi\">31131112</span>                                     <span class=\"mf\">17548.5292866</span>   <span class=\"p\">[</span><span class=\"n\">Ce</span><span class=\"p\">]</span>\n<span class=\"n\">Nd</span>        <span class=\"mi\">111312</span>                                       <span class=\"mf\">22875.863883</span>    <span class=\"p\">[</span><span class=\"n\">Pr</span><span class=\"p\">]</span>\n<span class=\"n\">Pm</span>        <span class=\"mi\">132</span>                                          <span class=\"mf\">29820.4561674</span>   <span class=\"p\">[</span><span class=\"n\">Nd</span><span class=\"p\">]</span>\n<span class=\"n\">Sm</span>        <span class=\"mi\">311332</span>                                       <span class=\"mf\">15408.1151815</span>   <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Zn</span><span class=\"p\">]</span>\n<span class=\"n\">Eu</span>        <span class=\"mi\">1113222</span>                                      <span class=\"mf\">20085.6687093</span>   <span class=\"p\">[</span><span class=\"n\">Sm</span><span class=\"p\">]</span>\n<span class=\"n\">Gd</span>        <span class=\"mi\">13221133112</span>                                  <span class=\"mf\">21662.9728211</span>   <span class=\"p\">[</span><span class=\"n\">Eu</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Tb</span>        <span class=\"mi\">3113112221131112</span>                             <span class=\"mf\">28239.3589492</span>   <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Gd</span><span class=\"p\">]</span>\n<span class=\"n\">Dy</span>        <span class=\"mi\">111312211312</span>                                 <span class=\"mf\">36812.1864183</span>   <span class=\"p\">[</span><span class=\"n\">Tb</span><span class=\"p\">]</span>\n<span class=\"n\">Ho</span>        <span class=\"mi\">1321132</span>                                      <span class=\"mf\">47987.5294384</span>   <span class=\"p\">[</span><span class=\"n\">Dy</span><span class=\"p\">]</span>\n<span class=\"n\">Er</span>        <span class=\"mi\">311311222</span>                                    <span class=\"mf\">1098.5955997</span>    <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">Pm</span><span class=\"p\">]</span>\n<span class=\"n\">Tm</span>        <span class=\"mi\">11131221133112</span>                               <span class=\"mf\">1204.9083841</span>    <span class=\"p\">[</span><span class=\"n\">Er</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Co</span><span class=\"p\">]</span>\n<span class=\"n\">Yb</span>        <span class=\"mi\">1321131112</span>                                   <span class=\"mf\">1570.6911808</span>    <span class=\"p\">[</span><span class=\"n\">Tm</span><span class=\"p\">]</span>\n<span class=\"n\">Lu</span>        <span class=\"mi\">311312</span>                                       <span class=\"mf\">2047.51732</span>      <span class=\"p\">[</span><span class=\"n\">Yb</span><span class=\"p\">]</span>\n<span class=\"n\">Hf</span>        <span class=\"mi\">11132</span>                                        <span class=\"mf\">2669.0970363</span>    <span class=\"p\">[</span><span class=\"n\">Lu</span><span class=\"p\">]</span>\n<span class=\"n\">Ta</span>        <span class=\"mi\">13112221133211322112211213322113</span>             <span class=\"mf\">242.0773667</span>     <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">]</span>\n<span class=\"n\">W</span>         <span class=\"mi\">312211322212221121123222113</span>                  <span class=\"mf\">315.5665525</span>     <span class=\"p\">[</span><span class=\"n\">Ta</span><span class=\"p\">]</span>\n<span class=\"n\">Re</span>        <span class=\"mi\">111312211312113221133211322112211213322113</span>   <span class=\"mf\">169.2880181</span>     <span class=\"p\">[</span><span class=\"n\">Ge</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">]</span>\n<span class=\"n\">Os</span>        <span class=\"mi\">1321132122211322212221121123222113</span>           <span class=\"mf\">220.6800123</span>     <span class=\"p\">[</span><span class=\"n\">Re</span><span class=\"p\">]</span>\n<span class=\"n\">Ir</span>        <span class=\"mi\">3113112211322112211213322113</span>                 <span class=\"mf\">287.6734477</span>     <span class=\"p\">[</span><span class=\"n\">Os</span><span class=\"p\">]</span>\n<span class=\"n\">Pt</span>        <span class=\"mi\">111312212221121123222113</span>                     <span class=\"mf\">375.0045674</span>     <span class=\"p\">[</span><span class=\"n\">Ir</span><span class=\"p\">]</span>\n<span class=\"n\">Au</span>        <span class=\"mi\">132112211213322113</span>                           <span class=\"mf\">488.8474298</span>     <span class=\"p\">[</span><span class=\"n\">Pt</span><span class=\"p\">]</span>\n<span class=\"n\">Hg</span>        <span class=\"mi\">31121123222113</span>                               <span class=\"mf\">637.2503975</span>     <span class=\"p\">[</span><span class=\"n\">Au</span><span class=\"p\">]</span>\n<span class=\"n\">Tl</span>        <span class=\"mi\">111213322113</span>                                 <span class=\"mf\">830.7051329</span>     <span class=\"p\">[</span><span class=\"n\">Hg</span><span class=\"p\">]</span>\n<span class=\"n\">Pb</span>        <span class=\"mi\">123222113</span>                                    <span class=\"mf\">1082.8883286</span>    <span class=\"p\">[</span><span class=\"n\">Tl</span><span class=\"p\">]</span>\n<span class=\"n\">Bi</span>        <span class=\"mi\">3113322113</span>                                   <span class=\"mf\">1411.62861</span>      <span class=\"p\">[</span><span class=\"n\">Pm</span><span class=\"p\">,</span> <span class=\"n\">Pb</span><span class=\"p\">]</span>\n<span class=\"n\">Po</span>        <span class=\"mi\">1113222113</span>                                   <span class=\"mf\">1840.1669683</span>    <span class=\"p\">[</span><span class=\"n\">Bi</span><span class=\"p\">]</span>\n<span class=\"n\">At</span>        <span class=\"mi\">1322113</span>                                      <span class=\"mf\">2398.7998311</span>    <span class=\"p\">[</span><span class=\"n\">Po</span><span class=\"p\">]</span>\n<span class=\"n\">Rn</span>        <span class=\"mi\">311311222113</span>                                 <span class=\"mf\">3127.0209328</span>    <span class=\"p\">[</span><span class=\"n\">Ho</span><span class=\"p\">,</span> <span class=\"n\">At</span><span class=\"p\">]</span>\n<span class=\"n\">Fr</span>        <span class=\"mi\">1113122113</span>                                   <span class=\"mf\">4076.3134078</span>    <span class=\"p\">[</span><span class=\"n\">Rn</span><span class=\"p\">]</span>\n<span class=\"n\">Ra</span>        <span class=\"mi\">132113</span>                                       <span class=\"mf\">5313.7894999</span>    <span class=\"p\">[</span><span class=\"n\">Fr</span><span class=\"p\">]</span>\n<span class=\"n\">Ac</span>        <span class=\"mi\">3113</span>                                         <span class=\"mf\">6926.9352045</span>    <span class=\"p\">[</span><span class=\"n\">Ra</span><span class=\"p\">]</span>\n<span class=\"n\">Th</span>        <span class=\"mi\">1113</span>                                         <span class=\"mf\">7581.9047124</span>    <span class=\"p\">[</span><span class=\"n\">Ac</span><span class=\"p\">]</span>\n<span class=\"n\">Pa</span>        <span class=\"mi\">13</span>                                           <span class=\"mf\">9883.5986391</span>    <span class=\"p\">[</span><span class=\"n\">Th</span><span class=\"p\">]</span>\n<span class=\"n\">U</span>         <span class=\"mi\">3</span>                                            <span class=\"mf\">102.5628525</span>     <span class=\"p\">[</span><span class=\"n\">Pa</span><span class=\"p\">]</span>\n<span class=\"n\">Np5</span>       <span class=\"mi\">13112221133211322112211213322115</span>             <span class=\"mf\">0.0</span>             <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Pu5</span><span class=\"p\">]</span>\n<span class=\"n\">Np7</span>       <span class=\"mi\">13112221133211322112211213322117</span>             <span class=\"mf\">0.0</span>             <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Pu7</span><span class=\"p\">]</span>\n<span class=\"n\">Np8</span>       <span class=\"mi\">13112221133211322112211213322118</span>             <span class=\"mf\">0.0</span>             <span class=\"p\">[</span><span class=\"n\">Hf</span><span class=\"p\">,</span> <span class=\"n\">Pa</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">Ca</span><span class=\"p\">,</span> <span class=\"n\">Pu8</span><span class=\"p\">]</span>\n<span class=\"n\">Pu5</span>       <span class=\"mi\">312211322212221121123222115</span>                  <span class=\"mf\">0.0</span>             <span class=\"p\">[</span><span class=\"n\">Np5</span><span class=\"p\">]</span>\n<span class=\"n\">Pu7</span>       <span class=\"mi\">312211322212221121123222117</span>                  <span class=\"mf\">0.0</span>             <span class=\"p\">[</span><span class=\"n\">Np7</span><span class=\"p\">]</span>\n<span class=\"n\">Pu8</span>       <span class=\"mi\">312211322212221121123222118</span>                  <span class=\"mf\">0.0</span>             <span class=\"p\">[</span><span class=\"n\">Np8</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<h2 id=\"twindragon-binary\">Twindragon binary</h2>\n\n<p>The following chemistry corresponds to the binary number system using \nthe complex base $-1+i.$ This binary number system is known as <em>twindragon binary</em>.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">twindragon_say</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">assert</span> <span class=\"n\">num</span> <span class=\"o\">&lt;</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"s2\">&quot;This twindragon can only count to 7.&quot;</span>\n<span class=\"o\">...</span>     <span class=\"n\">twindragon</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"s1\">&#39;1100&#39;</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"s1\">&#39;1101&#39;</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"s1\">&#39;111010000&#39;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"s1\">&#39;111010001&#39;</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"s1\">&#39;111011100&#39;</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"s1\">&#39;111011101&#39;</span><span class=\"p\">}</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">twindragon</span><span class=\"p\">[</span><span class=\"n\">num</span><span class=\"p\">]</span>\n<span class=\"o\">...</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">twindragon_ls</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">(</span><span class=\"n\">twindragon_say</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">twindragon_chem</span> <span class=\"o\">=</span> <span class=\"n\">BinaryChemistry</span><span class=\"p\">(</span><span class=\"n\">twindragon_ls</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">twindragon_chem</span><span class=\"o\">.</span><span class=\"n\">generate_elements</span><span class=\"p\">(</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">twindragon_chem</span><span class=\"o\">.</span><span class=\"n\">print_periodic_table</span><span class=\"p\">()</span>\n<span class=\"n\">element</span>   <span class=\"n\">string</span>   <span class=\"n\">abundance</span>    <span class=\"n\">decay</span>\n<span class=\"n\">E1</span>        <span class=\"mi\">1</span>        <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E6</span><span class=\"p\">]</span>\n<span class=\"n\">E2</span>        <span class=\"mi\">10</span>       <span class=\"mf\">6.746022</span>     <span class=\"p\">[</span><span class=\"n\">E9</span><span class=\"p\">]</span>\n<span class=\"n\">E3</span>        <span class=\"mi\">1000</span>     <span class=\"mf\">1.5358344</span>    <span class=\"p\">[</span><span class=\"n\">E11</span><span class=\"p\">,</span> <span class=\"n\">E2</span><span class=\"p\">]</span>\n<span class=\"n\">E4</span>        <span class=\"mi\">10000</span>    <span class=\"mf\">2.8580442</span>    <span class=\"p\">[</span><span class=\"n\">E12</span><span class=\"p\">,</span> <span class=\"n\">E5</span><span class=\"p\">]</span>\n<span class=\"n\">E5</span>        <span class=\"mi\">100000</span>   <span class=\"mf\">1.3339664</span>    <span class=\"p\">[</span><span class=\"n\">E12</span><span class=\"p\">,</span> <span class=\"n\">E3</span><span class=\"p\">,</span> <span class=\"n\">E2</span><span class=\"p\">]</span>\n<span class=\"n\">E6</span>        <span class=\"mi\">11</span>       <span class=\"mf\">0.0</span>          <span class=\"p\">[</span><span class=\"n\">E8</span><span class=\"p\">,</span> <span class=\"n\">E1</span><span class=\"p\">]</span>\n<span class=\"n\">E7</span>        <span class=\"mi\">110</span>      <span class=\"mf\">28.3551578</span>   <span class=\"p\">[</span><span class=\"n\">E8</span><span class=\"p\">,</span> <span class=\"n\">E7</span><span class=\"p\">]</span>\n<span class=\"n\">E8</span>        <span class=\"mi\">1100</span>     <span class=\"mf\">24.8181731</span>   <span class=\"p\">[</span><span class=\"n\">E8</span><span class=\"p\">,</span> <span class=\"n\">E10</span><span class=\"p\">]</span>\n<span class=\"n\">E9</span>        <span class=\"mi\">1110</span>     <span class=\"mf\">14.6891551</span>   <span class=\"p\">[</span><span class=\"n\">E7</span><span class=\"p\">,</span> <span class=\"n\">E9</span><span class=\"p\">]</span>\n<span class=\"n\">E10</span>       <span class=\"mi\">111000</span>   <span class=\"mf\">11.5836587</span>   <span class=\"p\">[</span><span class=\"n\">E7</span><span class=\"p\">,</span> <span class=\"n\">E11</span><span class=\"p\">,</span> <span class=\"n\">E2</span><span class=\"p\">]</span>\n<span class=\"n\">E11</span>       <span class=\"mi\">11110</span>    <span class=\"mf\">6.1234052</span>    <span class=\"p\">[</span><span class=\"n\">E9</span><span class=\"p\">,</span> <span class=\"n\">E4</span><span class=\"p\">,</span> <span class=\"n\">E7</span><span class=\"p\">]</span>\n<span class=\"n\">E12</span>       <span class=\"mi\">111110</span>   <span class=\"mf\">1.9565832</span>    <span class=\"p\">[</span><span class=\"n\">E9</span><span class=\"p\">,</span> <span class=\"n\">E3</span><span class=\"p\">,</span> <span class=\"n\">E9</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">twindragon_chem</span><span class=\"o\">.</span><span class=\"n\">get_char_poly</span><span class=\"p\">()</span>\n<span class=\"k\">lambda</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">9</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">8</span> <span class=\"o\">+</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">7</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">6</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">5</span> <span class=\"o\">+</span> <span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">4</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">3</span> <span class=\"o\">-</span> <span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"k\">lambda</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">twindragon_chem</span><span class=\"o\">.</span><span class=\"n\">get_dom_eigenvalue</span><span class=\"p\">()</span>\n<span class=\"mf\">2.142515914678024</span>\n</code></pre></div>\n\n<h2 id=\"balanced-ternary\">Balanced ternary</h2>\n\n<p>In this example we find the chemical properties of a <a href=\"https://en.wikipedia.org/wiki/Balanced_ternary\">balanced ternary</a>\nlook and say sequence. </p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Define a (partial) say function to convert integers to balanced ternary:</span>\n<span class=\"o\">...</span> <span class=\"k\">def</span> <span class=\"nf\">bal_tern</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">assert</span> <span class=\"n\">num</span> <span class=\"o\">&lt;</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"s2\">&quot;bal_tern will only convert integers from 1 to 10.&quot;</span>\n<span class=\"o\">...</span>     <span class=\"n\">repn</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"s1\">&#39;1T&#39;</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"s1\">&#39;10&#39;</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"s1\">&#39;11&#39;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"s1\">&#39;1TT&#39;</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"s1\">&#39;1T0&#39;</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"s1\">&#39;1T1&#39;</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"s1\">&#39;10T&#39;</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">:</span><span class=\"s1\">&#39;100&#39;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"s1\">&#39;101&#39;</span><span class=\"p\">}</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">repn</span><span class=\"p\">[</span><span class=\"n\">num</span><span class=\"p\">]</span>\n<span class=\"o\">...</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Use the split function factory to generate an appropriate split function: </span>\n<span class=\"o\">...</span> <span class=\"n\">sff</span> <span class=\"o\">=</span> <span class=\"n\">SplitFuncFactory</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">declare_split_after</span><span class=\"p\">(</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split</span> <span class=\"o\">=</span> <span class=\"n\">sff</span><span class=\"o\">.</span><span class=\"n\">get_split</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Instantiate the look and say and chemistry objects:</span>\n<span class=\"o\">...</span> <span class=\"n\">bal_tern_ls</span> <span class=\"o\">=</span> <span class=\"n\">LookAndSay</span><span class=\"p\">(</span><span class=\"n\">bal_tern</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bal_tern_chem</span> <span class=\"o\">=</span> <span class=\"n\">Chemistry</span><span class=\"p\">(</span><span class=\"n\">bal_tern_ls</span><span class=\"p\">,</span> <span class=\"n\">split</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Generate persistent elements from the seed &#39;0&#39;, and order them according to their relative abundance:</span>\n<span class=\"o\">...</span> <span class=\"n\">bal_tern_chem</span><span class=\"o\">.</span><span class=\"n\">generate_elements</span><span class=\"p\">(</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bal_tern_chem</span><span class=\"o\">.</span><span class=\"n\">order_elements</span><span class=\"p\">(</span><span class=\"s1\">&#39;abundance&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Print the chemical properties</span>\n<span class=\"o\">...</span> <span class=\"n\">bal_tern_chem</span><span class=\"o\">.</span><span class=\"n\">print_periodic_table</span><span class=\"p\">()</span>\n<span class=\"n\">element</span>   <span class=\"n\">string</span>   <span class=\"n\">abundance</span>    <span class=\"n\">decay</span>\n<span class=\"n\">E1</span>        <span class=\"mi\">1</span><span class=\"n\">T</span>       <span class=\"mf\">23.6067977</span>   <span class=\"p\">[</span><span class=\"n\">E3</span><span class=\"p\">]</span>\n<span class=\"n\">E2</span>        <span class=\"mi\">11</span><span class=\"n\">T</span>      <span class=\"mf\">23.6067977</span>   <span class=\"p\">[</span><span class=\"n\">E1</span><span class=\"p\">,</span> <span class=\"n\">E2</span><span class=\"p\">]</span>\n<span class=\"n\">E3</span>        <span class=\"mi\">111</span><span class=\"n\">T</span>     <span class=\"mf\">14.5898034</span>   <span class=\"p\">[</span><span class=\"n\">E5</span><span class=\"p\">,</span> <span class=\"n\">E2</span><span class=\"p\">]</span>\n<span class=\"n\">E4</span>        <span class=\"mi\">110</span>      <span class=\"mf\">14.5898034</span>   <span class=\"p\">[</span><span class=\"n\">E1</span><span class=\"p\">,</span> <span class=\"n\">E4</span><span class=\"p\">]</span>\n<span class=\"n\">E5</span>        <span class=\"mi\">10</span>       <span class=\"mf\">14.5898034</span>   <span class=\"p\">[</span><span class=\"n\">E6</span><span class=\"p\">]</span>\n<span class=\"n\">E6</span>        <span class=\"mi\">1110</span>     <span class=\"mf\">9.0169944</span>    <span class=\"p\">[</span><span class=\"n\">E5</span><span class=\"p\">,</span> <span class=\"n\">E4</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bal_tern_chem</span><span class=\"o\">.</span><span class=\"n\">get_char_poly</span><span class=\"p\">())</span>\n<span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"k\">lambda</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bal_tern_chem</span><span class=\"o\">.</span><span class=\"n\">get_dom_eigenvalue</span><span class=\"p\">())</span> <span class=\"c1\"># golden!</span>\n<span class=\"mf\">1.618033988749895</span>\n</code></pre></div>\n\n<h1 id=\"projects-that-used-the-look_and_say-module\">Projects that used the look_and_say module</h1>\n\n<ul>\n<li><p>A D3 force graph showing <a href=\"https://observablehq.com/@jonnycomes/the-decay-of-conways-look-and-say-elements\">the decay of Conway's elements</a>.</p></li>\n<li><p>A D3 collapsable tree showing the <a href=\"https://observablehq.com/@jonnycomes/descendants-of-methuselum\">descendants of Methuselum</a>.</p>\n\n<h1 id=\"acknowledgments\">Acknowledgments</h1></li>\n<li><p>The initial implementation of the proof() method in the Cosmology class was written with Ethan Bassingthwaite and Monika de los Rios in the Spring of 2022 at The College of Idaho. We followed the strategy of Zeilberger's proof with implementation similar to that of Litherland. </p></li>\n</ul>\n"}, {"fullname": "look_and_say.split_Conway", "modulename": "look_and_say", "qualname": "split_Conway", "type": "function", "doc": "<p>Splits a string into a list of substrings according to Conway's Splitting Theorem.\nAssumes the string is not empty. \nFor example, split_Conway('1211132213') returns ['12', '1113', '22', '13'].</p>\n", "signature": "(string)", "funcdef": "def"}, {"fullname": "look_and_say.LookAndSay", "modulename": "look_and_say", "qualname": "LookAndSay", "type": "class", "doc": "<p>A class responsible for the fundamental say-what-you-see operation\nthat generates a look and say sequence. The parameter <code>say</code> in the\nconstructor is a function that determines the decay of a chunk of the form\n$d^n$. The say function can have one or two parameters:</p>\n\n<ul>\n<li>If the say function accepts one parameter, the LookAndSay object will correspond to the decay $d^n\\to say(n)d$.</li>\n<li>If the say function accepts two parameters, the LookAndSay object will correspond to the decay $d^n\\to say(n, d)$.</li>\n</ul>\n\n<p>When no parameter is passed to the constructor, the LookAndSay\nobject will correspond to standard decimal look and say sequences.</p>\n"}, {"fullname": "look_and_say.LookAndSay.__init__", "modulename": "look_and_say", "qualname": "LookAndSay.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, say=None)", "funcdef": "def"}, {"fullname": "look_and_say.LookAndSay.say_what_you_see", "modulename": "look_and_say", "qualname": "LookAndSay.say_what_you_see", "type": "function", "doc": "<p>The fundamental look and say operation that generates each \nterm of a look and say sequence from its predecessor. For example, \nusing the standard (default) LookAndSay object, \n<code>say_what_you_see('1112222333')</code> returns <code>'314233'</code>.</p>\n", "signature": "(self, string)", "funcdef": "def"}, {"fullname": "look_and_say.LookAndSay.generate_sequence", "modulename": "look_and_say", "qualname": "LookAndSay.generate_sequence", "type": "function", "doc": "<p>Generates the look and say sequence. The parameter <code>seed</code> is \nthe initial term in the sequence, and <code>terms</code> is the \nnumber of terms generated.</p>\n", "signature": "(self, seed, terms)", "funcdef": "def"}, {"fullname": "look_and_say.LookAndSay.get_sequence", "modulename": "look_and_say", "qualname": "LookAndSay.get_sequence", "type": "function", "doc": "<p>Returns the look and say sequence as a list of strings</p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.LookAndSay.get_length_ratios", "modulename": "look_and_say", "qualname": "LookAndSay.get_length_ratios", "type": "function", "doc": "<p>Returns a list of the ratios of lengths of \nsuccessive terms in the look and say sequence.</p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.LookAndSay.get_last_length_ratio", "modulename": "look_and_say", "qualname": "LookAndSay.get_last_length_ratio", "type": "function", "doc": "<p>Returns the ratio of the lengths of the last \ntwo terms of the look and say sequence</p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.Chemistry", "modulename": "look_and_say", "qualname": "Chemistry", "type": "class", "doc": "<p>A class responsible for generating all the persistent elements \nappearing in look and say sequences, along with \nthe chemical properties of those elements.</p>\n\n<p>Parameters in the constructor are a LookAndSay object <code>las</code> and\na splitting function <code>split</code>. The user is responsible\nfor verifying that the provided splitting function is valid for the given\nLookAndSay object. The default splitting function corresponds to \nConway's original Splitting Theorem.</p>\n"}, {"fullname": "look_and_say.Chemistry.__init__", "modulename": "look_and_say", "qualname": "Chemistry.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, las, split=<function split_Conway>, elements=None)", "funcdef": "def"}, {"fullname": "look_and_say.Chemistry.generate_elements", "modulename": "look_and_say", "qualname": "Chemistry.generate_elements", "type": "function", "doc": "<p>Collects all the persistent elements from all the look and\nsay sequences generated by the given seeds. The string(s) entered as the \nparameter(s) will be used as the seed(s) for generating the elements. \nBy default, this method will clear any elements in the chemistry that exist \nbefore this method is called (i.e. prior to collecting from the new seeds). \nUse <code>reset = False</code>  to keep the old elements.</p>\n", "signature": "(self, *seeds, reset=True)", "funcdef": "def"}, {"fullname": "look_and_say.Chemistry.get_elements", "modulename": "look_and_say", "qualname": "Chemistry.get_elements", "type": "function", "doc": "<p>Returns the elements as a list.</p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.Chemistry.get_element", "modulename": "look_and_say", "qualname": "Chemistry.get_element", "type": "function", "doc": "<p>Returns the element with the given name. Returns None there is no element with the given name.</p>\n", "signature": "(self, name)", "funcdef": "def"}, {"fullname": "look_and_say.Chemistry.clear_elements", "modulename": "look_and_say", "qualname": "Chemistry.clear_elements", "type": "function", "doc": "<p>Resets the list of elements back to the empty list.</p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.Chemistry.get_periodic_table", "modulename": "look_and_say", "qualname": "Chemistry.get_periodic_table", "type": "function", "doc": "<p>Creates a periodic table including each element's name, string, relative abundance, and decay.\nReturns the periodic table as a nested dictionary.</p>\n", "signature": "(self, dec_places=7, abundance_sum=100)", "funcdef": "def"}, {"fullname": "look_and_say.Chemistry.print_periodic_table", "modulename": "look_and_say", "qualname": "Chemistry.print_periodic_table", "type": "function", "doc": "<p>Prints the periodic table. Note the abundances are given as percentages, \nso they will differ from Conway's abundances by a factor of $10^4$.\nThe parameter <code>dec_places</code> refers to the accuracy of the abundances.</p>\n", "signature": "(self, dec_places=7, abundance_sum=100)", "funcdef": "def"}, {"fullname": "look_and_say.Chemistry.get_decay_matrix", "modulename": "look_and_say", "qualname": "Chemistry.get_decay_matrix", "type": "function", "doc": "<p>Returns the decay matrix as a nested list of integers \n(i.e. a list of the rows).\nThe order of the columns and rows correspond to the order\nin the list of elements.</p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.Chemistry.get_dom_eigenvalue", "modulename": "look_and_say", "qualname": "Chemistry.get_dom_eigenvalue", "type": "function", "doc": "<p>Returns the maximal real eigenvalue of the decay matrix.\nIn the standard case, this will give Conway's constant. \nIn general, this will give the growth rate of the look and say sequence. \nThis method assumes the existence of a real eigenvalue which\nis larger than (the absolute value) of every other eigenvalue.\nThis assumption is usually guaranteed by the Perron-Frobenius Theorem.</p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.Chemistry.get_char_poly", "modulename": "look_and_say", "qualname": "Chemistry.get_char_poly", "type": "function", "doc": "<p>Returns the characteristic polynomial of the decay matrix using sympy.\nBy default the returned polynomial will be factored. \nUse <code>factor = False</code> to get the expanded (i.e. unfactored) polynomial. \nUse <code>latex = True</code> to return the polynomial formatted in latex.</p>\n", "signature": "(self, factor=True, latex=False)", "funcdef": "def"}, {"fullname": "look_and_say.Chemistry.order_elements", "modulename": "look_and_say", "qualname": "Chemistry.order_elements", "type": "function", "doc": "<p>Reorders the list of elements depending on the parameter <code>order_on</code> as follows:</p>\n\n<ul>\n<li><code>order_on='abundance'</code>: Orders elements from highest abundance to lowest.</li>\n<li><code>order_on='string'</code>: Orders elements according to the lexicographic order of their strings.</li>\n<li><code>order_on='string length'</code>: Orders elements according to the lengths of their strings from shortest to longest.</li>\n<li><code>order_on='name'</code>: Orders elements alphabetically according to their names.</li>\n<li><code>order_on='key'</code>: Orders elements according to the function specified by the parameter <code>key</code>.</li>\n</ul>\n\n<p>You can reverse the ordering above by passing the extra parameter <code>reverse = True</code>.</p>\n\n<p>By default this method will automatically rename the elements according to their new order.\nThis will not happen if the elements are named via Conway or if the parameter <code>rename = False</code> is passed.</p>\n", "signature": "(self, order_on, key=None, reverse=False, rename=True)", "funcdef": "def"}, {"fullname": "look_and_say.BinaryChemistry", "modulename": "look_and_say", "qualname": "BinaryChemistry", "type": "class", "doc": "<p>A chemistry for binary look and say sequences that split as 1.0 \n(i.e. whenever a 1 is left of a 0). This chemistry is valid whenever\nthe say-what-you-see operation maps \n$d^n$ to $[n]d$ where $[n]$ is a binary representation of n\nthat always starts with a 1. For example, this chemistry is \nvalid for standard base two binary look and say sequences.</p>\n", "bases": "Chemistry"}, {"fullname": "look_and_say.BinaryChemistry.__init__", "modulename": "look_and_say", "qualname": "BinaryChemistry.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, las, elements=None)", "funcdef": "def"}, {"fullname": "look_and_say.Element", "modulename": "look_and_say", "qualname": "Element", "type": "class", "doc": "<p>An element consists of a string (usually a chunk of digits) and \na name. For example, in Conway's chemistry there is an element\nnamed H (short for Hydrogen) consisting of the string '22'. \nEach element decays into a list of other elements. \nThe only methods for this class are getters and a setter.</p>\n"}, {"fullname": "look_and_say.Element.__init__", "modulename": "look_and_say", "qualname": "Element.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, string, las, decay=[])", "funcdef": "def"}, {"fullname": "look_and_say.Element.get_decay", "modulename": "look_and_say", "qualname": "Element.get_decay", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.Element.set_name", "modulename": "look_and_say", "qualname": "Element.set_name", "type": "function", "doc": "<p></p>\n", "signature": "(self, name)", "funcdef": "def"}, {"fullname": "look_and_say.Element.get_name", "modulename": "look_and_say", "qualname": "Element.get_name", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.Element.get_string", "modulename": "look_and_say", "qualname": "Element.get_string", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.SplitFuncFactory", "modulename": "look_and_say", "qualname": "SplitFuncFactory", "type": "class", "doc": "<p>A class to help create a split function. The split function factory\ncan produce a split function via any combination of the following:</p>\n\n<ul>\n<li>Specifying specific chunks L and R such that LR splits as L.R.</li>\n<li>Specifying specific characters or chunks to always split before or after.</li>\n</ul>\n"}, {"fullname": "look_and_say.SplitFuncFactory.__init__", "modulename": "look_and_say", "qualname": "SplitFuncFactory.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.SplitFuncFactory.get_split", "modulename": "look_and_say", "qualname": "SplitFuncFactory.get_split", "type": "function", "doc": "<p>Returns the split function.</p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "look_and_say.SplitFuncFactory.declare_splitting_pairs", "modulename": "look_and_say", "qualname": "SplitFuncFactory.declare_splitting_pairs", "type": "function", "doc": "<p>Specify pairs of chunks in the form (L, R) \nsuch that LR always splits as L.R.</p>\n", "signature": "(self, *pairs)", "funcdef": "def"}, {"fullname": "look_and_say.SplitFuncFactory.declare_split_after", "modulename": "look_and_say", "qualname": "SplitFuncFactory.declare_split_after", "type": "function", "doc": "<p>Specify chunks L such that LR splits for every possible R (assuming the last character of L and the first character of R are distinct).</p>\n", "signature": "(self, *chunks)", "funcdef": "def"}, {"fullname": "look_and_say.SplitFuncFactory.declare_split_before", "modulename": "look_and_say", "qualname": "SplitFuncFactory.declare_split_before", "type": "function", "doc": "<p>Specify chunks R such that LR splits for every possible L (assuming the last character of L and the first character of R are distinct).</p>\n", "signature": "(self, *chunks)", "funcdef": "def"}, {"fullname": "look_and_say.Cosmology", "modulename": "look_and_say", "qualname": "Cosmology", "type": "class", "doc": "<p>A class for proving Conway's Cosmological Theorem.\nCurrently this will only prove The Cosmological Theorem \nfor the standard base ten look and say sequences where every term\nconsists of strings of some of the digits 1, 2, and 3.</p>\n"}, {"fullname": "look_and_say.Cosmology.__init__", "modulename": "look_and_say", "qualname": "Cosmology.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, digits='123')", "funcdef": "def"}, {"fullname": "look_and_say.Cosmology.days_exotic", "modulename": "look_and_say", "qualname": "Cosmology.days_exotic", "type": "function", "doc": "<p>Returns the number of days until the string splits into a compound of common elements.</p>\n", "signature": "(self, string)", "funcdef": "def"}, {"fullname": "look_and_say.Cosmology.decay_tree", "modulename": "look_and_say", "qualname": "Cosmology.decay_tree", "type": "function", "doc": "<p>Starting with the passed string, the say_what_you_see operation is applied\nrepeatedly until the result splits as a compound of common elements. \nReturns a nested dictionary corresponding to the resulting <em>decay tree</em>: \nThe root of the tree is the passed string, the children of a node are the \natoms obtained by applying the say_what_you_see operation to the node and \nsplitting the result, the leaves are the nodes corresponding to common elements.</p>\n", "signature": "(self, string)", "funcdef": "def"}, {"fullname": "look_and_say.Cosmology.proof", "modulename": "look_and_say", "qualname": "Cosmology.proof", "type": "function", "doc": "<p>Uses a backtracking algorithm to prove Conway's Cosmological Theorem. If we pass the parameter\n<code>day = N</code> the algorithm searches for all strings that might appear as chunks of an N-day\nold element. The search starts with strings of length 1 (i.e. the digits) and then \nsearches for strings of length 2, then length 3, etc. For each string found in the search, \nthe algorithm repeatedly applies the say-what-you-see operation until the result is a \ncompound of common elements. The algorithm terminates when for some positive integer L, \nthere are no strings of length L that can appear as chunks of an N-day old element, and \nall strings of length less than L which might appear as a chunk of an N-day old element \nare shown to eventually decay into a compound of common elements.</p>\n\n<p>Running the program prints a few details about the search. In particular, an upper bound\nfor the age of an exotic (i.e. not common) element is displayed.  </p>\n\n<p>The default parameter is <code>day = 9</code>, which results in a proof of the Cosmological Theorem\nthat gives an upper bound of 27 for the age of an exotic element. </p>\n\n<p>The proof is essentially the same as that of Zeilberger. \nThe implementation is similar to that of Litherland.</p>\n", "signature": "(self, day=9)", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();